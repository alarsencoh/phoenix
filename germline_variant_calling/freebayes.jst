
{% macro freebayes(sample_name, sample, aligner='bwa') %}
{% for batch in constants.phoenix.intervals_batched %}
- name: freebayes_{{ sample_name }}_{{ aligner }}_{{ loop.index }}
  input: results/{{ sample.glType }}/{{ sample_name }}/{{ sample_name }}.{{ aligner }}.bam
  walltime: "24:00:00"
  cpu: 4
  cmd: |
    set -ue
    module load {{ constants.tools.freebayes_1_2.module }}

    mkdir -p "temp/{{ sample_name }}_{{ aligner }}_freebayes/"

    TAB=$'\t'
    cat <<EOF > "temp/{{ sample_name }}_{{ aligner }}_freebayes/{{ loop.index }}.bed"
    {% for interval in batch %}
    {{ interval.contig }}${TAB}{{ interval.start }}${TAB}{{ interval.stop }}
    {% endfor %}
    EOF

    freebayes \
      -b "results/{{ sample.glType }}/{{ sample_name }}/{{ sample_name }}.{{ aligner }}.bam" \
      -f "{{ constants.phoenix.reference_fasta_path }}" \
      -t "temp/{{ sample_name }}_{{ aligner }}_freebayes//{{ loop.index }}.bed" \
      --ploidy 2 \
      --min-repeat-entropy 1 \
      > "temp/{{ sample_name }}_{{ aligner }}_freebayes//{{ loop.index }}.vcf.gz"
{% endfor %}


- name: freebayes_merge_{{ sample_name }}_{{ aligner }}
  after: 
    re: freebayes_{{ sample_name }}_{{ aligner }}_.*
  output: results/{{ sample.glType }}/{{ sample_name }}/{{ sample_name }}.{{ aligner }}.freebayes.vcf
  walltime: "24:00:00"
  cpus: 4
  cmd: |
    set -eu
    module load {{ constants.tools.gatk_4_0_7_0.module }}

    gatk MergeVcfs \
      {% for batch in constants.phoenix.intervals_batched %}
      --INPUT "temp/{{ sample_name }}_{{ aligner }}_freebayes//{{ loop.index }}.vcf.gz" \
      {% endfor %}
      --OUTPUT "results/{{ sample.glType }}/{{ sample_name }}/{{ sample_name }}.{{ aligner }}.freebayes.vcf"

    rm -r "temp/{{ sample_name }}_{{ aligner }}_freebayes/"


{% endmacro %}