# Exome Alignment BWA
# Take fastq data to aligned bams with qc.
# Most of this module is borrowed from genome alignment
#
# Pseudo-code Summary of Workflow:
# for sample in samples if glType == Genome
#   for read group in sample.read_groups
#       bwa rg.fq1 rg.fq2 > temp/rgid.bwa.bam
#   merge {rg for rg in sample.read_groups} > temp/sample.bwa.bam
#   markdups temp/sample.bwa.bam > temp/sample.md.bwa.bam
#   recalibrate temp/sample.md.bwa.bam > results/genome/sample/sample.bwa.bam
#   qc results/genome/sample/sample.bwa.bam > results/genome/sample/qc/sample.bwa.bam...
#
{% from 'genome_alignment/bwa_mem.jst' import bwa_mem with context %}
{% from 'genome_alignment/samtools_markdups.jst' import markdups with context %}
{% from 'genome_alignment/gatk_baserecalibration.jst' import baserecalibration with context %}
{% from 'exome_alignment/bam_qc_exome.jst' import bamqc_exome with context %}


{% macro exome_alignment(samples) %}

{% for sample_name, sample in samples.items() if sample.glType|lower == 'exome' %}
    {% for rgid, rg in sample.read_groups.items() %}
        {% if rg.data_files|length != 2 %}
            {{ raise('This module only supports paired end data with two fastqs') }}
        {% endif %}

        {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
        {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
        {% set rgline = '@RG\\tID:{}\\tPU:{}\\tSM:{}\\tPL:{}\\tCN:{}\\tPM:{}\\tKS:{}'.format( 
          rg.rgid, rg.rgpu, rg.rgsm, rg.rgpl, rg.rgcn, rg.rgpm, rg.rgks) %}

        {{- bwa_mem(rgid, rgline, r1fastq, r2fastq,) }}
        
    {% endfor %}

    {{- markdups(sample_name, sample) }}
    {{- baserecalibration(sample_name, sample) }}
    {{- bamqc_exome(sample_name, sample) }}
    
{% endfor %}

{% endmacro %}

