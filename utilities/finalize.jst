{% macro finalize() %}

- name: finalize
  after-re: .*
  cpus: 1
  walltime: "4:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.multiqc.module }}

    mkdir --parents qc
    multiqc --force --outdir qc .

    mkdir --parents symbolic_links
    cd symbolic_links

    {# Create symbolic links to deepvariant pass vcf, ichorCNA seg file, gatk igv seg file, merged vcf, and bams/crams #}
    {% for general_library_type, data_files in dataFiles | groupby('gltype') %}
      {% if general_library_type in 'exome' %}
        {% set taskPrefix = 'Exome' %}

        {% if tasks[taskPrefix+"_constitutional_snp_indel_caller_deepvariant"]|default(true) %}
          for line in `find ../{{ general_library_type }}/constitutional_variant_calls/deepvariant -name "*.deepvariant.pass.vcf.gz"`
          do
            ln --symbolic --force ${line}
            ln --symbolic --force ${line}.tbi
          done
        {% endif %}

        {% if tasks[taskPrefix+"_somatic_merge_vcfs_vcfMerger2"]|default(true) %}
          for line in `find ../{{ general_library_type }}/somatic_variant_calls/vcfmerger2 -name "*.merged.vcf.gz"`
          do
            ln --symbolic --force ${line}
            ln --symbolic --force ${line}.tbi
          done
        {% endif %}

        {% if tasks[taskPrefix+"_somatic_cna_caller_gatk"]|default(true) %}
          for line in `find ../{{ general_library_type }}/somatic_copy_number/gatk -name "*.re_centered.cr.igv.seg"`
          do
            ln --symbolic --force ${line}
          done
        {% endif %}
      {% elif general_library_type in 'genome' %}
        {% set taskPrefix = 'Genome' %}

        {% if tasks[taskPrefix+"_constitutional_snp_indel_caller_deepvariant"]|default(true) %}
          for line in `find ../{{ general_library_type }}/constitutional_variant_calls/deepvariant -name "*.deepvariant.pass.vcf.gz"`
          do
            ln --symbolic --force ${line}
            ln --symbolic --force ${line}.tbi
          done
        {% endif %}

        {% if tasks[taskPrefix+"_constitutional_cna_caller_ichor"]|default(true) %}
          for line in `find ../{{ general_library_type }}/copy_number_analysis/ichorCNA -name "*.ichorCNA.cna.seg"`
          do
            ln --symbolic --force ${line}
          done
        {% endif %}

        {% if tasks[taskPrefix+"_somatic_merge_vcfs_vcfMerger2"]|default(true) %}
          for line in `find ../{{ general_library_type }}/somatic_variant_calls/vcfmerger2 -name "*.merged.vcf.gz"`
          do
            ln --symbolic --force ${line}
            ln --symbolic --force ${line}.tbi
          done
        {% endif %}

        {% if tasks[taskPrefix+"_somatic_cna_caller_gatk"]|default(true) %}
          for line in `find ../{{ general_library_type }}/somatic_copy_number/gatk -name "*.re_centered.cr.igv.seg"`
          do
            ln --symbolic --force ${line}
          done
        {% endif %}
      {% elif general_library_type in 'rna' %}
        {% set taskPrefix = 'RNA' %}

      {% elif general_library_type in 'singlecellrna' and data_files[0].glprep in 'singlecellrna' %}
        {% set taskPrefix = 'SingleCellRNA' %}
        {% if tasks[taskPrefix+"_transcriptome_quantify_expression_cellranger_count"]|default(true) %}
          for line in `find ../{{ general_library_type }}/alignment/cellranger_count -name "*.cellranger_count.bam.web_summary.html"`
          do
            ln --symbolic --force ${line}
          done

          for line in `find ../{{ general_library_type }}/expression_estimates/cellranger_count -name "*.cellranger_count.bam.cloupe"`
          do
            ln --symbolic --force ${line}
          done
        {% endif %}
      {% elif general_library_type in 'singlecellrna' and data_files[0].glprep in 'singlecellenrichment' %}
        {% set taskPrefix = 'SingleCellEnrichment' %}
        {% if tasks[taskPrefix+"_transcriptome_quantify_expression_cellranger_count"]|default(true) %}
          for line in `find ../{{ general_library_type }}/vdj_assembly/cellranger_vdj -name "*.web_summary.html"`
          do
            ln --symbolic --force ${line}
          done

          for line in `find ../{{ general_library_type }}/vdj_assembly/cellranger_vdj -name "*.vloupe"`
          do
            ln --symbolic --force ${line}
          done
        {% endif %}
      {% endif %}


    {% if cram|default(true) %}
      for line in `find ../{{ general_library_type }}/alignment -name "*.cram"`
      do
        ln --symbolic --force ${line}
        ln --symbolic --force ${line}.crai
      done
    {% else %}
      for line in `find ../{{ general_library_type }}/alignment -name "*.bam"`
      do
        ln --symbolic --force ${line}
        ln --symbolic --force ${line}.bai
      done
    {% endif %}

  {% endfor %}

{% endmacro %}