{% macro manta_constitutional(sample, aligner='bwa') %}
- name: manta_constitutional_{{ sample.name }}_{{ aligner }}
  tags: [manta, manta-constitutional, {{ sample.glType }}]
  methods: > 
    Constitutional structural variants and indels for {{ sample.name }} 
    ({{ aligner }}) were called with {{ constants.tools.manta_1_4.verbose }}.
  input:
    - {{ sample.glType }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam
  output:
    - {{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz
    - {{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz
    - {{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz
  cpus: 40
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.manta_1_4.module }}
    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_2_7_15.module }}

    SAMPLE_DIR="{{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}"
    RUN_DIR="${SAMPLE_DIR}/{{ sample.name }}_{{ aligner }}_run_dir"

    # Purge any existing run files prior to starting
    rm -r "${RUN_DIR}" || true
    mkdir -p "${RUN_DIR}"

    # In order to restrict calling to only the specified regions
    # Manta requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Manta.
    MANTA_BED="${RUN_DIR}/callRegions.bed"
    TAB=$'\t'
    cat <<EOF > "${MANTA_BED}"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "${MANTA_BED}"
    tabix -f -p bed "${MANTA_BED}.gz"

    # Build the Manta run file
    configManta.py \
      {% if sample.glType == 'exome' %}
      --exome \
      --generateEvidenceBam \
      {% endif %}
      --callRegions "${MANTA_BED}.gz" \
      --bam "{{ sample.glType }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam" \
      --referenceFasta "{{ constants.phoenix.reference_fasta }}" \
      --runDir "${RUN_DIR}"

    # Execute on the local machine with 39 parallel jobs
    "${RUN_DIR}/runWorkflow.py" -m local -j 39

    # Save the evidence bams to the sample dir
    # these will only be generated for exome samples
    mkdir -p "${SAMPLE_DIR}/evidence/"
    mv "${RUN_DIR}/results/evidence/"* "${SAMPLE_DIR}/evidence/" || true

    # Save all the vcs in the sample dir
    mv "${RUN_DIR}/results/variants/candidateSmallIndels.vcf.gz" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz"
    mv "${RUN_DIR}/results/variants/candidateSmallIndels.vcf.gz.tbi" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz.tbi"
    mv "${RUN_DIR}/results/variants/candidateSV.vcf.gz" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz"
    mv "${RUN_DIR}/results/variants/candidateSV.vcf.gz.tbi" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi"
    mv "${RUN_DIR}/results/variants/diploidSV.vcf.gz" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz"
    mv "${RUN_DIR}/results/variants/diploidSV.vcf.gz.tbi" "${SAMPLE_DIR}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz.tbi"

    # Remove the remaining files
    rm -r "${RUN_DIR}"

{% endmacro %}