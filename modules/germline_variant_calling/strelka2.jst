{% macro strelka2_constitutional(sample, aligner='bwa') %}
- name: strelka2_constitutional_{{ sample.name }}_{{ aligner }}
  tags: [strelka2, strelka2-germline, {{ sample.glType }}]
  methods: > 
    Germline variants for {{ sample.name }} ({{ aligner }}) were called with 
    {{ constants.tools.strelka_2_9_2.verbose }}.
  input:
    - {{ sample.glType }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam
    - {{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}_{{ aligner }}/
  output: 
    - {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}_{{ aligner }}/
  cpus: 40
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.strelka_2_9_2.module }}
    module load {{ constants.tools.samtools_1_9.module }}

    SAMPLE_DIR="{{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}_{{ aligner }}"
    RUN_DIR="${SAMPLE_DIR}/run_dir"

    # Purge any existing run files prior to starting
    rm -r "${RUN_DIR}" || true
    mkdir -p "${RUN_DIR}"

    # In order to restrict calling to only the specified regions
    # strelka requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Strelka.
    STRELKA_BED="${SAMPLE_DIR}/callRegions.bed"
    TAB=$'\t'
    cat <<EOF > "${STRELKA_BED}"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "${STRELKA_BED}"
    tabix -f -p bed "${STRELKA_BED}.gz"

    # Some settings are only configurable via an ini file. Here 
    # we generate this ini file and save it to the run dir.
    STRELKA_CONFIG="${SAMPLE_DIR}/config.ini"
    cat <<EOF > "${STRELKA_CONFIG}"
    [StrelkaGermline]
    isWriteRealignedBam = 1
    EOF

    configureStrelkaGermlineWorkflow.py \
      {% if sample.glType == 'exome' %}
      --exome \
      {% endif %}
      --config "${STRELKA_CONFIG}" \
      --callRegions "${STRELKA_BED}.gz" \
      --bam "{{ sample.glType }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam" \
      --indelCandidates "{{ sample.glType }}/constitutional_structural_calls/manta/{{ sample.name }}_{{ aligner }}/variants/candidateSmallIndels.vcf.gz" \
      --ref "{{ constants.phoenix.reference_fasta }}" \
      --runDir "${RUN_DIR}"

    # Execute on the local machine with 39 parallel jobs
    "${RUN_DIR}/runWorkflow.py" -m local -j 39

    # Move the final results out of the run_dir then compress the
    # rest of the files for reference later
    mv "${RUN_DIR}/results/"* "${SAMPLE_DIR}"
    (cd "${SAMPLE_DIR}" && tar -cz --remove-files -f "run_dir.tar.gz" "run_dir")


- name: strelka2_constitutional_filter_variants_{{ sample.name }}_{{ aligner }}
  tags: [strelka2, strelka2-constitutional, bcftools, {{ sample.glType }}]
  input:
    - {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}_{{ aligner }}/
  output:
    - {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.all.vcf.gz
    - {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.pass.vcf.gz
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}

    SAMPLE_DIR="{{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}_{{ aligner }}"

    # Move and rename the the vcfs out of their generic location
    mv "${SAMPLE_DIR}/variants/variants.vcf.gz" {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.all.vcf.gz
    mv "${SAMPLE_DIR}/variants/variants.vcf.gz.tbi" {{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.all.vcf.gz.tbi

    # Then filter out the PASS variants to a separate file
    bcftools filter \
      -O z \
      -i 'FILTER == "PASS"' \
      "{{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.all.vcf.gz" \
      > "{{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.pass.vcf.gz"

    bcftools index "{{ sample.glType }}/constitutional_variant_calls/strelka2/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.strelka2.pass.vcf.gz"


{% endmacro %}
