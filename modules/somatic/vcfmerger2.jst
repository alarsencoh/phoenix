{% macro vcfmerger2(pair, aligner='bwa') %}

{% set bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set temp_dir %}temp/vcfmerger2/{{ pair.name }}{% endset %}

{% set vcfs=[] %}

{% for caller in pair.callers %}
{% set bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set gzipped_path %}{{ pair.gltype }}/somatic_variant_calls/{{ caller }}/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.{{ caller }}.pass.vcf.gz{% endset %}
{% set unzipped_path %}{{ temp_dir }}/{{ pair.name }}_{{ aligner }}_{{ caller }}.vcf{% endset %}
{% set prepped_path %}{{ temp_dir }}/{{ pair.name }}_{{ aligner }}_{{ caller }}.prepz.vcf{% endset %}
{% set filtered_path %}{{ temp_dir }}/{{ pair.name }}_{{ aligner }}_{{ caller }}.filt.vcf{% endset %}
{% do vcfs.append({
  'bam': bam,
  'gzipped_path': gzipped_path, 
  'unzipped_path': unzipped_path,
  'prepped_path': prepped_path,
  'filtered_path': filtered_path
}) %}

- name: vcfmerger2_prep_{{ caller }}_{{ pair.name }}_{{ aligner }}
  tags: [vcfMerger2, {{ pair.name }}]
  input: 
    - {{ gzipped_path }}
  cpus: 2
  walltime: "4:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_3_6_0.module }}
    module load {{ constants.tools.bedtools_2_26_0.module }}
    module load {{ constants.tools.rstats_3_4_1.module }}
    
    mkdir -p "{{ temp_dir }}"
    gunzip -c "{{ gzipped_path }}" > "{{ unzipped_path }}"

    # Locate the prep_vcf.sh script relative to vcfMerger2.py
    PREPVCF="$(dirname $(dirname $(which vcfMerger2.py)))"/prep_vcfs/prep_vcf.sh
    
    ${PREPVCF} \
      -g "{{ constants.phoenix.reference_fasta }}" \
      -d "{{ temp_dir }}" \
      --bam "{{ bam }}" \
      --toolname "{{ caller }}" \
      --normal-sname "{{ pair.normal.rgsm }}" \
      --tumor-sname "{{ pair.tumor.rgsm }}" \
      --vcf "{{ unzipped_path }}" \
      -o "{{ prepped_path }}"


- name: vcfmerger2_filter_{{ caller }}_{{ pair.name }}_{{ aligner }}
  tags: [vcfMerger2, {{ pair.name }}]
  after: vcfmerger2_prep_{{ caller }}_{{ pair.name }}_{{ aligner }}
  cpus: 2
  walltime: "24:00:00"
  cmd: |
    set -uev

    module load {{ constants.tools.samtools_1_9.module }}

    bcftools filter \
      -O v \
      --exclude 'FMT/DP<10 | FMT/AR[0]>=0.02 | FMT/AR[1]<0.05' \
      "{{ prepped_path }}" \
      > "{{ filtered_path }}"

{% endfor %}


- name: vcfmerger2_{{ pair.name }}_{{ aligner }}
  tags: [vcfMerger2, {{ pair.name }}]
  after:
  {% for caller in pair.callers %}
    - vcfmerger2_filter_{{ caller }}_{{ pair.name }}_{{ aligner }}
  {% endfor %}
  cpus: 4
  walltime: "24:00:00"
  cmd: |
    set -uev

    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_3_6_0.module }}
    module load {{ constants.tools.bedtools_2_26_0.module }}
    module load {{ constants.tools.rstats_3_4_1.module }}

    mkdir -p "{{ pair.gltype }}/somatic_variant_calls/vcfmerger2/{{ pair.name }}"
    
    vcfMerger2.py \
      --do-venn \
      --skip-prep-vcfs \
      --precedence "{{ pair.callers|join('|') }}" \
      --toolnames "{{ pair.callers|join('|') }}" \
      --vcfs "{{ vcfs|map(attribute='filtered_path')|join('|') }}" \
      -g "{{ constants.phoenix.reference_fasta }}" \
      --normal-sname "{{ pair.normal.rgsm }}" \
      --tumor-sname "{{ pair.tumor.rgsm }}" \
      -d "{{ temp_dir }}" \
      -o "{{ pair.gltype }}/somatic_variant_calls/vcfmerger2/{{ pair.name }}/{{ pair.name }}.merged.vcf"

    chmod -R 755 "{{ temp_dir }}/venn"*"/sets"
    mv "{{ temp_dir }}/venn"* "{{ pair.gltype }}/somatic_variant_calls/vcfmerger2/{{ pair.name }}/"

{% endmacro %}
