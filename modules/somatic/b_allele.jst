{% macro b_allele(pair, aligner='bwa') %}
{% set normal_bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}{{ pair.gltype }}/b_allele/strelka/{{ pair.name }}{% endset %}
{% set temp_dir %}temp/{{ pair.gltype }}/b_allele/strelka/{{ pair.name }}_{{ aligner }}{% endset %}
{% set b_allele_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.b_allele.vcf.gz{% endset %}

- name: strelka_b_allele_call_snvs_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, b_allele_caller, strelka, {{ pair.name }}]
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
  cpus: 20
  walltime: "24:00:00"
  cmd: |
    set -eu
    set -o pipefail
    module load {{ constants.tools.strelka_2_9_10.module }}
    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_2_7_15.module }}

    {# Purge any existing run files prior to starting #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    {#
    # In order to restrict calling to only the specified regions
    # strelka requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Strelka2.
    #}
    TAB=$'\t'
    cat <<EOF > "{{ temp_dir }}/callRegions.bed"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "{{ temp_dir }}/callRegions.bed"
    tabix -f -p bed "{{ temp_dir }}/callRegions.bed.gz"

    {# Build the Strelka run file #}
    configureStrelkaGermlineWorkflow.py \
      {% if pair.gltype == 'exome' %}
      --exome \
      {% endif %}
      --ref "{{ constants.phoenix.reference_fasta }}" \
      --callRegions "{{ temp_dir }}/callRegions.bed.gz" \
      --bam "{{ normal_bam }}" \
      --bam "{{ tumor_bam }}" \
      --runDir "{{ temp_dir }}"

    {# Execute on the local machine #}
    "{{ temp_dir }}/runWorkflow.py" -m local -j 19


- name: strelka_b_allele_annotate_snvs_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, b_allele_caller, strelka, {{ pair.name }}]
  after: strelka_b_allele_call_snvs_{{ pair.name }}_{{ aligner }}
  output: {{ b_allele_vcf }}
  cpus: 2
  cmd: |
    set -eu
    set -o pipefail
    module load {{ constants.tools.samtools_1_9.module }}

    mkdir -p "{{ results_dir }}"
    
    {# Filter and annotate the snv vcf #}
    bcftools annotate \
      --threads 2 \
      --output-type z \
      --annotations "{{ constants.phoenix.dbsnp_v152 }}" \
      --columns "ID,+INFO" \
      "{{ temp_dir }}/results/variants/variants.vcf.gz" \
      --output "{{ b_allele_vcf }}"

    bcftools index --tbi --force "{{ b_allele_vcf }}"

    {# Finally remove the run dir #}
    rm -r "{{ temp_dir }}"

{% endmacro %}