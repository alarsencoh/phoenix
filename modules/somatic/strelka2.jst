{% macro strelka2_somatic(pair, aligner='bwa') %}
{% do pair.callers.append('strelka2') %}
{% set normal_bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set indel_candidates %}{{ pair.gltype }}/somatic_structural_calls/manta/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz{% endset %}
{% set pair_dir %}{{ pair.gltype }}/somatic_variant_calls/strelka2/{{ pair.name }}{% endset %}
{% set run_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/strelka2/{{ pair.name }}_{{ aligner }}{% endset %}
{% set all_vcf %}{{ pair_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ pair_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.pass.vcf.gz{% endset %}

- name: strelka2_somatic_{{ pair.name }}_{{ aligner }}
  tags: [strelka2, strelka2-somatic, {{ pair.gltype }}]
  methods: > 
    Somatic variants for {{ pair.name }} ({{ aligner }}) were called with 
    {{ constants.tools.strelka_2_9_2.verbose }}.
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
    - {{ indel_candidates }}
  cpus: 20
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.strelka_2_9_2.module }}
    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_2_7_15.module }}

    # Purge any existing run files prior to starting
    rm -r "{{ run_dir }}" || true
    mkdir -p "{{ run_dir }}"

    # In order to restrict calling to only the specified regions
    # strelka requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Strelka.
    TAB=$'\t'
    cat <<EOF > "{{ run_dir }}/callRegions.bed"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "{{ run_dir }}/callRegions.bed"
    tabix -f -p bed "{{ run_dir }}/callRegions.bed.gz"

    # Some settings are only configurable via an ini file. Here
    # we generate this ini file and save it to the run dir.
    cat <<EOF > "{{ run_dir }}/config.ini"
    [StrelkaSomatic]
    isWriteRealignedBam = 1
    EOF

    # Build the Strelka run file
    configureStrelkaSomaticWorkflow.py \
      {% if pair.gltype == 'exome' %}
      --exome \
      {% endif %}
      --config "{{ run_dir }}/config.ini" \
      --callRegions "{{ run_dir }}/callRegions.bed.gz" \
      --normalBam "{{ normal_bam }}" \
      --tumorBam "{{ tumor_bam }}" \
      --indelCandidates "{{ indel_candidates }}" \
      --ref "{{ constants.phoenix.reference_fasta }}" \
      --runDir "{{ run_dir }}"

    # Execute on the local machine with 19 parallel jobs
    "{{ run_dir }}/runWorkflow.py" -m local -j 19


- name: strelka2_somatic_filter_variants_{{ pair.name }}_{{ aligner }}
  tags: [strelka2, strelka2-somatic, bcftools, filter, {{ pair.gltype }}]
  after: strelka2_somatic_{{ pair.name }}_{{ aligner }}
  output:
    - {{ pair_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.all.vcf.gz
    - {{ pair_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.pass.vcf.gz
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}

    mkdir -p "{{ pair_dir }}/evidence"
  
    # Move and rename the evidence bams
    mv "{{ run_dir }}/results/realigned/realigned.normal.bam" "{{ pair_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam"
    mv "{{ run_dir }}/results/realigned/realigned.normal.bam.bai" "{{ pair_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam.bai"
    mv "{{ run_dir }}/results/realigned/realigned.tumor.bam" "{{ pair_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam"
    mv "{{ run_dir }}/results/realigned/realigned.tumor.bam.bai" "{{ pair_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam.bai"

    # Merge the snvs and indels into a final vcf
    bcftools concat \
      -a \
      --threads 2 \
      -O z \
      -o "{{ all_vcf }}" \
      "{{ run_dir }}/results/variants/somatic.indels.vcf.gz" \
      "{{ run_dir }}/results/variants/somatic.snvs.vcf.gz"

    bcftools index -tf "{{ all_vcf }}"

    # Then filter out the PASS variants to a separate file
    bcftools filter \
      -O z \
      -i 'FILTER == "PASS"' \
      {% if pair.gltype == 'exome' %}
      --regions-file "{{ pair.normal.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"

    bcftools index -tf "{{ pass_vcf }}"

    # Finally remove the run dir
    rm -r "{{ run_dir }}"


{% endmacro %}
