{% macro vardict_somatic(pair, aligner='bwa') %}
{% do pair.callers.append('vardict') %}
{% set normal_bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}{{ pair.gltype }}/somatic_variant_calls/vardict/{{ pair.name }}{% endset %}
{% set temp_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/vardict/{{ pair.name }}_{{ aligner }}{% endset %}
{% set all_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.vardict.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.vardict.pass.vcf.gz{% endset %}

{% for batch in constants.phoenix.calling_intervals %}
- name: vardict_somatic_{{ pair.name }}_{{ aligner }}_{{ loop.index }}
  tags: [vardict_somatic, {{ pair.gltype }}]
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
  cpus: 8
  mem: 32G
  walltime: "12:00:00"
  cmd: |
    set -uev
    set -o pipefail
    module load {{ constants.tools.rstats_3_4_1.module }}
    module load {{ constants.tools.vardict_1_6_0.module }}
    module load {{ constants.tools.bedtools_2_26_0.module }}
    module load {{ constants.tools.samtools_1_9.module }}
    
    mkdir -p "{{ temp_dir }}"

    # Write out the regions in this batch to a file
    # Here we use bedtools to split each interval into smaller chunks
    # and the -s option to create overlaps in the chunks. This is due
    # to the VarDict memory usage spiking very high on larger intervals.
    TAB=$'\t'
    cat <<EOF | bedtools makewindows -w 20000 -s 19850 -b /dev/stdin > "{{ temp_dir }}/{{ loop.index }}.bed"
    {% for interval in batch %}
    {{ interval.contig }}${TAB}{{ interval.start - 1 }}${TAB}{{ interval.stop }}
    {% endfor %}
    EOF

    # Custom settings:
    # -Q 1 (default is 0) -O 5 (default is no filtering, suspect that means 0)
    # -q 20 (default is 25), set as novaseq has bins of 2, 12, 23, 37
    # enabled -UN to only count the first in pair when an overlap exists, didn't use -u that uses the
    # forward strand read which might be second in pairs that typically has worse quality.
    JAVA_OPTS="-Xmx26g" VarDict \
      -th 4 \
      -b "{{ tumor_bam }}|{{ normal_bam }}" \
      -N "{{ pair.tumor.rgsm }}" \
      -G "{{ constants.phoenix.reference_fasta }}" \
      -A 4 \
      -B 2 \
      -F 0x500 \
      -f 0.01 \
      -I 50 \
      -k 1 \
      -M 0 \
      -m 8 \
      -O 5 \
      -o 1.5 \
      -P 5 \
      -Q 1 \
      -q 20 \
      -r 2 \
      --dedup \
      --nosv \
      -UN \
      -V 0.05 \
      -VS LENIENT \
      -X 2 \
      -x 0 \
      -c 1 -S 2 -E 3 \
      "{{ temp_dir }}/{{ loop.index }}.bed" \
    | testsomatic.R \
    | var2vcf_paired.pl \
      -N "{{ pair.tumor.rgsm }}|{{ pair.normal.rgsm }}" \
      -c 0 \
      -I 12 \
      -m 5.25 \
      -P 0.05 \
      -p 5 \
      -q 22.5 \
      -Q 1 \
      -d 5 \
      -v 3 \
      -f 0.02 \
      -F 0.2 \
      -o 1.5 \
    | bcftools view \
      -O z \
      -o "{{ temp_dir }}/{{ loop.index }}.vardict.vcf.gz"
    
    bcftools index -tf "{{ temp_dir }}/{{ loop.index }}.vardict.vcf.gz"

{% endfor %}


- name: vardict_somatic_merge_chunks_{{ pair.name }}_{{ aligner }}
  tags: [bcftools, concat, vardict_somatic, {{ pair.gltype }}]
  after-re: vardict_somatic_{{ pair.name }}_{{ aligner }}_.*
  output: {{ all_vcf }}
  cpus: 4
  mem: 16G
  walltime: "12:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}
    
    mkdir -p "{{ results_dir }}"
    
    bcftools concat \
      --allow-overlaps \
      -O z \
      -o "{{ all_vcf }}" \
      {% for b in constants.phoenix.calling_intervals %}
      "{{ temp_dir }}/{{ loop.index }}.vardict.vcf.gz" \
      {% endfor %}
    
    bcftools index -tf "{{ all_vcf }}"
    
    {% if not debug %}
    rm -r "{{ temp_dir }}"
    {% endif %}


- name: vardict_somatic_filter_variants_{{ pair.name }}_{{ aligner }}
  tags: [bcftools, filter, {{ pair.gltype }}]
  after: vardict_somatic_merge_chunks_{{ pair.name }}_{{ aligner }}
  output: {{ pass_vcf }}
  cpus: 2
  mem: 8G
  walltime: "12:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}
    
    bcftools filter \
      -O z \
      -i 'FILTER == "PASS" & INFO/STATUS == "StrongSomatic"' \
      {% if pair.gltype == 'exome' %}
      --regions-file "{{ pair.normal.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"
     
    bcftools index -tf "{{ pass_vcf }}"

{% endmacro %}

