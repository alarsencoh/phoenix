{% macro mutect2(pair, aligner='bwa') %}
{% do pair.callers.append('mutect2') %}
{% set normal_bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set temp_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/mutect2/{{ pair.name }}_{{ aligner }}{% endset %}
{% set results_dir %}{{ pair.gltype }}/somatic_variant_calls/mutect2/{{ pair.name }}{% endset %}
{% set all_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.mutect2.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.mutect2.pass.vcf.gz{% endset %}

{% for batch in constants.phoenix.calling_intervals %}
- name: mutect2_{{ pair.name }}_{{ aligner }}_{{ loop.index }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, gatk_mutect2, {{ pair.name }}]
  tags: [gatk, gatk-Mutect2, {{ pair.gltype }}]
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
  cpus: 4
  mem: 16G
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.gatk_4_1_0_0.module }}
    
    mkdir -p "{{ temp_dir }}"
    
    gatk Mutect2 \
      --java-options "-Xmx14G" \
      --tmp-dir temp/ \
      --reference {{ constants.phoenix.reference_fasta }} \
      --input "{{ normal_bam }}" \
      --normal-sample "{{ pair.normal.rgsm }}" \
      --input "{{ tumor_bam }}" \
      --tumor-sample "{{ pair.tumor.rgsm }}" \
      {% for interval in batch %}
      -L "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      --output "{{ temp_dir }}/{{ loop.index }}.mutect2.vcf.gz"

{% endfor %}


- name: mutect2_merge_chunks_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, gatk_mutect2, {{ pair.name }}]
  after-re: mutect2_{{ pair.name }}_{{ aligner }}_.*
  methods: Somatic variant calls for {{ pair.name }} were called with
    {{ constants.tools.gatk_4_1_0_0.verbose }} Mutect2 in parallel chunks and
    then merged together with {{ constants.tools.samtools_1_9.verbose }} concat.
  cpus: 4
  mem: 16G
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}
    
    bcftools concat \
      -O z \
      -o "{{ temp_dir }}.mutect2.raw.vcf.gz" \
      {% for b in constants.phoenix.calling_intervals %}
      "{{ temp_dir }}/{{ loop.index }}.mutect2.vcf.gz" \
      {% endfor %}

    bcftools index -tf "{{ temp_dir }}.mutect2.raw.vcf.gz"


- name: mutect2_filter_calls_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, gatk_mutect2, {{ pair.name }}]
  after: mutect2_merge_chunks_{{ pair.name }}_{{ aligner }}
  output: {{ all_vcf }}
  cpus: 8
  mem: 32G
  walltime: "24:00:00"
  cmd: |
    set -uev 
    module load {{ constants.tools.gatk_4_1_0_0.module }}

    mkdir -p "{{ results_dir }}"
    
    gatk FilterMutectCalls \
      --java-options "-Xmx28G" \
      {% if pair.gltype == 'genome' %}
      --strict-strand-bias true \
      {% endif %}
      --max-alt-allele-count 2 \
      --variant "{{ temp_dir }}.mutect2.raw.vcf.gz" \
      --output "{{ all_vcf }}" \
      --stats "{{ results_dir }}/{{ pair.name }}.{{ aligner }}.stats.tsv"


- name: mutect2_filter_variants_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, gatk_mutect2, {{ pair.name }}]
  after: mutect2_filter_calls_{{ pair.name }}_{{ aligner }}
  output: {{ pass_vcf }}
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}
    
    bcftools filter \
      -O z \
      -i 'FILTER == "PASS"' \
      {% if pair.gltype == 'exome' %}
      --targets-file "{{ pair.normal.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"
    
    bcftools index -tf "{{ pass_vcf }}"

{% endmacro %}
