{% macro bcftools_annotate(input_vcf, output_vcf, sample, subtype, prefix) %}

- name: bcftools_annotate_{{ sample }}
  tags: [bcftools, annotation]
  input:
    - {{ input_vcf }}
  output: {{ output_vcf }}
  walltime: "8:00:00"
  cpus: 4
  cmd: |
    set -euv
    set -o pipefail

    module load {{ constants.tools.samtools_1_9.module }}

    # we need to convert whatever vcf type we are given into a bcf (bcftools loves bcfs)
    # also create a temp bcf that we will use for all annotation runs
    bcftools convert \
      --output-type b \
      --output tempout.bcf \
      {{ input_vcf }}

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_dbsnp"]|default(true) %}
    # annotate with dbsnp
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.dbsnp }}" \
      --mark-sites DBSNPv152 \
      --columns ID \
      --output-type b \
      --output tempout.bcf \
      tempin.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf
    {% endif %}

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_gnomad"]|default(true) %}
    # annotate with gnomad exome
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.gnomad_exome }}" \
      --mark-sites GNOMAD_EXOME \
      --output-type b \
      --output tempout.bcf \
      temp.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf
    {% endif %}

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_gnomad"]|default(true) %}
    # annotate with gnomad genome
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.gnomad_genome }}" \
      --mark-sites GNOMAD_GENOME \
      --output-type b \
      --output tempout.bcf \
      temp.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf
    {% endif %}

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_cosmic"]|default(true) %}
    # annotate with cosmic
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.cosmic }}" \
      --mark-sites COSMIC \
      --output-type b \
      --output tempout.bcf \
      temp.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf
    {% endif %}

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_cosmic_nc"]|default(true) %}
    # annotate with cosmic_nc
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.cosmic_nc }}" \
      --mark-sites COSMIC_NC \
      --output-type b \
      --output tempout.bcf \
      temp.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf

    # move tempout to tempin for next step
    mv tempout.bcf tempin.bcf
    {% endif %}

    {% if tasks[prefix+"_"+subtype+"_annotate_vcfs_bcftools_clinvar"]|default(true) %}
    # annotate with clinvar
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.phoenix.clinvar }}" \
      --mark-sites CLINVAR \
      --output-type b \
      --output tempout.bcf \
      temp.bcf

    bcftools index --threads 4 --tbi --force tempout.bcf
    {% endif %}

    mv tempout.bcf {{ sample }}.bcf
    mv tempout.bcf.tbi {{ sample }}.bcf.tbi

    # convert back to vcf.gz for the average users
    bcftools convert \
    --output-type z \
    --output {{ output_vcf }}
    {{ sample }}.bcf

{% endmacro %}
