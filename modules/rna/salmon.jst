# Run Salmon RNA Quantification
{% macro salmon(sample) %}
{% set tempdir %}temp/{{ sample.gltype }}/quant/salmon/{{ sample.name }}{% endset %}
{% set resultsdir %}{{ sample.gltype }}/quant/salmon/{{ sample.name }}{% endset %}

{% set r1fqlist = [] %}
{% set r2fqlist = [] %}
{% for rgid, rg in sample.read_groups.items() %}
    {% for fq in rg.data_files|selectattr('fastqCode', 'eq', 'R1') %}
        {% do r1fqlist.append('"temp/fastqs/' + (fq.basename) + '"') %}
    {% endfor %}
    {% for fq in rg.data_files|selectattr('fastqCode', 'eq', 'R2') %}
        {% do r2fqlist.append('"temp/fastqs/' + (fq.basename) + '"') %}
    {% endfor %}
{% endfor %}

- name: salmon_quant_cdna_{{ sample.name }}
  methods: >
    Transcript quantification for {{ sample.name }} was performed with
    {{ constants.tools.salmon_0_12_0.verbose }} using the cDNA index.
  input:
  {% for fq in r1fqlist %} 
    - {{ fq }}
  {% endfor %}
  {% for fq in r2fqlist %}
    - {{ fq }}
  {% endfor %}
  output: {{ resultsdir }}/
  cpus: 14
  walltime: "24:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.salmon_0_12_0.module }}

    mkdir -p "{{ tempdir }}"
    mkdir -p "{{ resultsdir }}"

    salmon quant \
      --validateMappings \
      --seqBias \
      --gcBias \
      --threads 14 \
      --libType "{{ constants.phoenix.strandedness_options[sample.strandedness].salmon }}" \
      --index "{{ constants.phoenix.salmon_index }}" \
      --geneMap "{{ constants.phoenix.gtf }}" \
      -1 {{ r1fqlist|join(' ') }} \
      {% if r2fqlist %}
      -2 {{ r2fqlist|join(' ') }} \
      {% endif %}
      --output "{{ tempdir }}"
    
    # Save back what we need and nuke the rest
    mv "{{ tempdir }}/quant.sf" "{{ resultsdir }}/{{ sample.name }}.transcripts.sf"
    mv "{{ tempdir }}/quant.genes.sf" "{{ resultsdir }}/{{ sample.name }}.genes.sf"
    mv "{{ tempdir }}/lib_format_counts.json" "{{ resultsdir }}/{{ sample.name }}.counts.json"
    rm -r "{{ tempdir }}"
  

{% endmacro %}