{% from 'modules/read_group_line.jst' import read_group_line %}

# Run STAR RNA Alignment for quantification
{% macro star_quant(sample) %}
{% set r1fqlist = [] %}
{% set r2fqlist = [] %}
{% set rglinelist = [] %}

{% for rgid, rg in sample.read_groups.items() %}
  {% if rg.data_files|length < 2 %}
      {{ raise('Read group did not have 2 data files: {}'.format(rgid)) }}
  {% endif %}
  {% do rglinelist.append( read_group_line(rg, format='star') ) %}
  
  {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
  {% do r1fastq.update({"path": "temp/fastqs/" + (r1fastq.fastqPath|basename)}) %}
  {% do r1fqlist.append(r1fastq) %}
    
  {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
  {% do r2fastq.update({"path": "temp/fastqs/" + (r2fastq.fastqPath|basename)}) %}
  {% do r2fqlist.append(r2fastq) %}

{% endfor %}

{% set sjdb_overhang = sample.read_length|default(100) - 1 %}
{% set star_index_size %}{{ sample.read_length|default(100) }}bpReads{% endset %}
{% set star_index = constants.phoenix.star_indices[star_index_size] %}
{% set star_finaldir %}{{ sample.gltype }}/alignment/star/{{ sample.name }}{% endset %}
{% set star_finalcountsdir %}{{ sample.gltype }}/quant/star/{{ sample.name }}{% endset %}
{% set star_tempdir %}temp/star/{{ sample.name }}{% endset %}
{% set star_mkdup_tempdir %}{{ star_tempdir }}/markdup_temp/{% endset %}
{% set star_bam_unsort %}{{ star_tempdir }}/{{ sample.name }}.Aligned.out.bam{% endset %}
{% set star_bam_transcript %}{{ star_tempdir }}/{{ sample.name }}.Aligned.toTranscriptome.out.bam{% endset %}
{% set star_bam_md %}{{ star_tempdir }}/{{ sample.name }}.md.bam{% endset %}
{% set star_bam_final %}{{ star_finaldir }}/{{ sample.name }}.star.bam{% endset %}

- name: star_quant_{{ sample.name }}
  methods: >
    Transcript quantification for {{ sample.name }} was performed with
    {{ constants.tools.star_2_6_1d.verbose }} followed by TODO...
  input:
    {% for fq in r1fqlist %}
    - {{ fq.path }}
    {% endfor %}
    {% for fq in r2fqlist %}
    - {{ fq.path }}
    {% endfor %}
  output: 
    - {{ star_bam_unsort }}
    - {{ star_bam_transcript }}
  cpus: 20
  walltime: "24:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.star_2_6_1d.module }}

    mkdir -p "{{ star_tempdir }}"
    mkdir -p "{{ star_finaldir }}"
    mkdir -p "{{ star_finalcountsdir }}"

    # Custom STAR Code Options ; defaults and source justification
    # Star Manual v2.7.0f Encode Recommendations:
    # --outFilterType BySJout ; default=Normal ; reduces the number of spurious junctions
    # --outFilterMultimapNmax 20 ; default=10 ; max number of multiple alignments allowed for a read,
    #   otherwise considered unmapped
    # --alignSJoverhangMin 8 ; default=5 ; min overhang for unannotated junctions
    # --alignSJDBoverhangMin 1 ; default=3 ; min overhang for annotated junctions
    # --outFilterMismatchNmax 999 ; default=10 ; max number of mismatches per pair, large number
    #   switches off this filter (--outFilterMismatchNoverReadLmax enables a percentage filter)
    # --outFilterMismatchNoverReadLmax 0.04 ; default=1.0 ; max number of mismatches per pair relative
    #   to read length (ie. 0.04*200=8 for the paired reads)
    # --alignIntronMin 20 ; default=21 ; minimum intron length
    # --alignIntronMax 1000000 ; default=0(enables calculation) ; maximum intron length
    # --alignMatesGapMax 1000000 ; default=0(enables calculation) ; max genomic distance between mates
    #
    # Star Fusion Parameters
    # --chimJunctionOverhangMin 12 ; default=20 ; minimum overhang for a chimeric junction
    # --chimMultimapNmax 10 ; default=0 ; maximum number of chimeric multi-alignments
    # --chimSegmentMin 12 ; default=0, GDC=15 ; Needs to be a positive value to detect a fusion, min
    #  alignment on BOTH regions to define chimeric
    # --outSAMstrandField intronMotif ; default=None ; allows support for cufflinks using unstranded libraries
    # --twopassMode Basic ; default=- GDC=Basic GATKsnv=Basic ; all 1st pass junctions inserted into the
    #   genome indices on the fly
    # --chimSegmentReadGapMax 3 ; default=0 ; maximum gap in the read sequence between chimeric segments
    # --chimMultimapScoreRange 10 ; default=1 ; the score range for multi-mapping chimeras below the best chimeric
    #   score. Only works with {chimMultimapNmax > 1
    # --chimNonchimScoreDropMin 10 ; default=20 ; to trigger chimeric detection, the drop in the best non-chimeric
    #   alignment score with respect to the read length has to be smaller than this value
    # --chimOutJunctionFormat 1 ; default=0 ; required as of STAR v2.6.1 for usage with STAR-fusion
    # --peOverlapNbasesMin 12 ; default=0 ; minimum number of overlap bases to trigger mates merging and realignment
    # --peOverlapMMp 0.1 ; default=0.01 ; maximum proportion of mismatched bases in the overlap area
    #
    # GDC
    # --chimOutType Junctions SeparateSAMold WithinBAM SoftClip ; #default=Junctions ;
    #   NOTE: Did not enable SeparateSAMold as this will be deprecated
    # --quantMode TranscriptomeSAM GeneCounts, default=- ; GeneCounts=count reads per gene

    STAR \
      --runMode alignReads \
      --twopassMode Basic \
      --runThreadN 19 \
      --genomeLoad NoSharedMemory \
      --readFilesType Fastx \
      --readFilesCommand zcat \
      --limitOutSAMoneReadBytes 90000000 \
      --outSAMtype BAM Unsorted \
      --outSAMmode Full \
      --outSAMstrandField intronMotif \
      --outSAMunmapped Within \
      --outSAMmapqUnique 255 \
      --outFilterType BySJout \
      --outFilterMultimapNmax 20 \
      --outFilterMismatchNmax 999 \
      --outFilterMismatchNoverReadLmax 0.04 \
      --alignIntronMin 20 \
      --alignIntronMax 1000000 \
      --alignMatesGapMax 1000000 \
      --alignSJoverhangMin 8 \
      --alignSJDBoverhangMin 1 \
      --peOverlapNbasesMin 12 \
      --peOverlapMMp 0.1 \
      --chimOutType WithinBAM SoftClip \
      --chimSegmentMin 12 \
      --chimJunctionOverhangMin 12 \
      --chimSegmentReadGapMax 3 \
      --chimMultimapNmax 0 \
      --chimMultimapScoreRange 10 \
      --chimNonchimScoreDropMin 10 \
      --chimOutJunctionFormat 1 \
      --quantMode TranscriptomeSAM GeneCounts \
      --outSAMattrRGline {{ rglinelist|join(' , ') }} \
      --sjdbOverhang "{{ sjdb_overhang }}" \
      --genomeDir "{{ star_index }}" \
      --readFilesIn "{{ r1fqlist|map(attribute='path')|join(',') }}" "{{ r2fqlist|map(attribute='path')|join(',') }}" \
      --outFileNamePrefix "{{ star_tempdir }}/{{ sample.name }}."
    
    mv \
      "{{ star_tempdir }}/{{ sample.name }}.ReadsPerGene.out.tab" \
      "{{ star_tempdir }}/{{ sample.name }}.SJ.out.tab" \
      "{{ star_finalcountsdir }}"


- name: markduplicates_star_{{ sample.name }}
  input: {{ star_bam_unsort }}
  output: {{ star_bam_final }}
  cpus: 12
  cmd: |
    set -uev
    set -o pipefail
    module load {{ constants.tools.samtools_1_9_65_g1b72f1a.module }}

    # If this task was interrupted previously, temp files may exist
    # that will cause errors with samtools markdup. Here, we purge any
    # existing temp files before making the directory again.
    rm -r "{{ star_mkdup_tempdir }}" || true
    mkdir -p "{{ star_mkdup_tempdir }}"
    mkdir -p "{{ star_finaldir }}/stats/"

    samtools fixmate \
      --threads 4 \
      -m \
      "{{ star_bam_unsort }}" \
      - |\
    samtools sort \
      -l 5 \
      -m 1G \
      --threads 4 \
      - |\
    samtools markdup \
      -s \
      --threads 4 \
      -T "{{ star_tempdir }}/markdup_temp/" \
      - \
      "{{ star_bam_final }}" \
      2> "{{ star_finaldir }}/stats/{{ sample.name }}.star.bam.markdup.txt"


- name: htseq_{{ sample.name }}
  input: {{ star_bam_unsort }}
  output: {{ sample.gltype }}/quant/htseq/{{ sample.name }}/{{ sample.name }}.htseq_counts.txt
  cpus: 16
  walltime: "48:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.htseq_0_11_1.module }}
    
    mkdir -p "{{ sample.gltype }}/quant/htseq/{{ sample.name }}/"

    # Notes about command options:
    # -r --order=pos ; default=name ; GDC=name (bam unsorted)
    # -s --stranded=<yes/no/reverse> ; default=yes ; GDC=no (Dumb)
    # -a --a=<minaqual> ; default=10 ; skip all reads with alignment quality lower than the given minimum value
    # --additional-attr=gene_name ; default=none ; will be printed as an additional column after the primary attribute column but before the counts column(s)
    # --mode=<union/intersection-strict/intersection-nonempty> ; default=union ; Pegasus=union, GDC=intersection-nonempty
    # --nonunique=<none/all> ; default=none ; Mode to handle reads that align to or are assigned to more than one feature in the overlap
    # --secondary-alignments=<score/ignore> ; default=score
    # --supplementary-alignments=<score/ignore> ; default=score

    htseq-count \
      --format=bam \
      --order=pos \
      --a=10 \
      --type=exon \
      --idattr=gene_id \
      --additional-attr=gene_name \
      --mode=union \
      --nonunique=none \
      --stranded={{ constants.phoenix.strandedness_options[sample.strandedness].htseq }} \
      "{{ star_bam_unsort }}" \
      "{{ constants.phoenix.gtf }}" \
      > "{{ sample.gltype }}/quant/htseq/{{ sample.name }}/{{ sample.name }}.htseq_counts.txt"


- name: featurecounts_{{ sample.name }}
  input: {{ star_bam_unsort }}
  output: 
    - {{ sample.gltype }}/quant/featurecounts/{{ sample.name }}/{{ sample.name }}.exon.counts.tsv
    - {{ sample.gltype }}/quant/featurecounts/{{ sample.name }}/{{ sample.name }}.gene.counts.tsv
  cpus: 8
  walltime: "8:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.subread_1_6_4.module }}
    
    mkdir -p "{{ sample.gltype }}/quant/featurecounts/{{ sample.name }}/"

    # TODO
    # -p should only be set for paired-end
    featureCounts \
      -T 7 \
      -p \
      -t "exon" \
      -s "{{ constants.phoenix.strandedness_options[sample.strandedness].featurecounts }}" \
      -a "{{ constants.phoenix.gtf }}" \
      -o "{{ sample.gltype }}/quant/featurecounts/{{ sample.name }}/{{ sample.name }}.exon.counts.tsv" \
      "{{ star_bam_unsort }}"

    # If walltime for these cmds is substantial, we'll split them into 2 separate
    # tasks. For now just testing them out vs HTSeq
    featureCounts \
      -T 7 \
      -p \
      -t "gene" \
      -s "{{ constants.phoenix.strandedness_options[sample.strandedness].featurecounts }}" \
      -a "{{ constants.phoenix.gtf }}" \
      -o "{{ sample.gltype }}/quant/featurecounts/{{ sample.name }}/{{ sample.name }}.gene.counts.tsv" \
      "{{ star_bam_unsort }}"


{% endmacro %}
