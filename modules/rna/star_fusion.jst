# Run STAR-Fusion for detecting gene fusions

{% macro star_fusion(sample) %}

{%- set temp_dir %}temp/{{ sample.gltype }}/fusions/starfusion/{{ sample.name }}{% endset %}
{%- set results_dir %}{{ sample.gltype }}/fusions/starfusion/{{ sample.name }}{% endset %}

{%- set r1fqlist = [] %}
{% set r2fqlist = [] %}
{% for rgid, rg in sample.read_groups.items() %}
  {% if rg.data_files|length < 2 %}
      {{ raise('This module only supports paired-end data with two fastqs per rg') }}
  {% endif %}
  {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
  {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
  {% do r1fqlist.append(r1fastq) %}
  {% do r2fqlist.append(r2fastq) %}
{% endfor -%}

- name: star_fusion_{{ sample.name }}
  tags: [{{ sample.gltype }}, transcriptome, fusion_caller, STAR_Fusion, {{ sample.name }}]
  input:
  {% for fq in r1fqlist %}
    - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  {% for fq in r2fqlist %}
    - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  cpus: 20
  mem: 60G
  walltime: "24:00:00"
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.star_fusion_1_8_1.module }}
    module load {{ constants.tools.trinity_2_8_6.module }}
    module load {{ constants.tools.gmap_gsnap_2019_09_12.module }}
    module load {{ constants.tools.bowtie2_2_3_5_1.module }}
    module load {{ constants.tools.jellyfish_2_3_0.module }}
    module load {{ constants.tools.salmon_0_14_1.module }}

    {#
    # Here we purge any existing run data prior to starting.
    # STAR-Fusion keeps track of progress with checkpoint files 
    # stored in the run dir. If they're present, steps in the 
    # workflow will be skipped. For example, if the fastq inputs 
    # changed, alignment will not be rerun properly unless these
    # files are removed first.
    #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    STAR-Fusion \
      --CPU 20 \
      --genome_lib_dir "{{ constants.phoenix.starfusion_index }}" \
      --left_fq {% for fq in r1fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %} \
      --right_fq {% for fq in r2fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %} \
      --examine_coding_effect \
      --extract_fusion_reads \
      --FusionInspector inspect \
      --denovo_reconstruct \
      --output_dir "{{ temp_dir }}"

    {#
      There are a large number of output files from star-fusion
      Append sample name string and star-fusion to the outputs
      - DO WE WANT THE BAM FILE?
      - MOVING ENTIRE FUSION INSPECTOR FOLDER, NEED TO DECIDE IF THERE ARE THINGS TO KEEP
    #}

    mv "{{ temp_dir }}"/Aligned.out.bam "{{ results_dir }}"/"{{ sample.name }}"_starfusion.bam
    mv "{{ temp_dir }}"/Chimeric.out.junction "{{ results_dir }}"/"{{ sample.name }}"_starfusion_Chimeric.out.junction
    mv "{{ temp_dir }}"/star-fusion.fusion_evidence_reads_1.fq "{{ results_dir }}"/"{{ sample.name }}"_starfusion_evidence_reads_1.fq
    mv "{{ temp_dir }}"/star-fusion.fusion_evidence_reads_2.fq "{{ results_dir }}"/"{{ sample.name }}"_starfusion_evidence_reads_2.fq
    mv "{{ temp_dir }}"/star-fusion.fusion_predictions.abridged.coding_effect.tsv "{{ results_dir }}"/"{{ sample.name }}"_starfusion_predictions.abridged.coding_effect.tsv
    mv "{{ temp_dir }}"/star-fusion.fusion_predictions.abridged.tsv "{{ results_dir }}"/"{{ sample.name }}"_starfusion_predictions.abridged.tsv
    mv "{{ temp_dir }}"/star-fusion.fusion_predictions.tsv "{{ results_dir }}"/"{{ sample.name }}"_starfusion_predictions.tsv
    mv "{{ temp_dir }}"/FusionInspector-inspect "{{ results_dir }}"


{% endmacro -%}
