{% from 'utilities/remove_files.jst' import remove_files with context %}
{% from 'utilities/md5sum_bam_cram.jst' import md5sum_bam_cram with context %}

# Run STAR-Fusion for detecting gene fusions

{% macro star_fusion(sample) %}

{%- set temp_dir %}temp/{{ sample.gltype }}/fusions/starfusion/{{ sample.name }}{% endset %}
{%- set results_dir %}{{ sample.gltype }}/fusions/starfusion/{{ sample.name }}{% endset %}

{%- set r1fqlist = [] %}
{% set r2fqlist = [] %}
{% for rgid, rg in sample.read_groups.items() %}
  {% if rg.data_files|length < 2 %}
      {{ raise('This module only supports paired-end data with two fastqs per rg') }}
  {% endif %}
  {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
  {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
  {% do r1fqlist.append(r1fastq) %}
  {% do r2fqlist.append(r2fastq) %}
{% endfor -%}

- name: star_fusion_alignment_{{ sample.name }}
  tags: [{{ sample.gltype }}, transcriptome, fusion_caller, STAR_Fusion, {{ sample.name }}]
  reset: predecessors
  input:
  {% for fq in r1fqlist %}
    - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  {% for fq in r2fqlist %}
    - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  output:
    - {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam
    - {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction
  cpus: 20
  mem: 80G
  walltime: "24:00:00"
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.star_fusion.module }}

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    STAR \
      --genomeDir {{ constants.phoenix.starfusion_index }}/ref_genome.fa.star.idx  \
      --outReadsUnmapped None  \
      --chimSegmentMin 12  \
      --chimJunctionOverhangMin 12  \
      --chimOutJunctionFormat 1  \
      --alignSJDBoverhangMin 10  \
      --alignMatesGapMax 100000  \
      --alignIntronMax 100000  \
      --alignSJstitchMismatchNmax 5 -1 5 5  \
      --runThreadN 20 \
      --outSAMstrandField intronMotif  \
      --outSAMunmapped Within  \
      --outSAMtype BAM Unsorted  \
      --readFilesIn {% for fq in r1fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %} {% for fq in r2fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %}  \
      --outSAMattrRGline ID:GRPundef  \
      --chimMultimapScoreRange 3  \
      --chimScoreJunctionNonGTAG -4  \
      --chimMultimapNmax 20  \
      --chimNonchimScoreDropMin 10  \
      --peOverlapNbasesMin 12 \
      --peOverlapMMp 0.1  \
      --genomeLoad NoSharedMemory  \
      --twopassMode Basic  \
      --readFilesCommand 'gunzip -c'  \
      --quantMode GeneCounts \
      --outFileNamePrefix "{{ temp_dir }}/"

    samtools sort \
      -T "{{ temp_dir }}" \
      -l 2 \
      -m 3G \
      --threads 20 \
      --output-fmt BAM \
      -o "{{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam" \
      "{{ temp_dir }}/Aligned.out.bam"

    samtools index -@ 20 {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam

    mv {{ temp_dir }}/Chimeric.out.junction {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction


- name: star_fusion_{{ sample.name }}
  tags: [{{ sample.gltype }}, transcriptome, fusion_caller, STAR_Fusion, {{ sample.name }}]
  input:
    - {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction
    - {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam
  output:
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.tsv
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.tsv
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.coding_effect.tsv
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_1.fq
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_2.fq
    - {{ results_dir }}/{{ sample.name }}_star_fusion.post_blast_and_promiscuity_filter.abridged
    {% if tasks.RNA_transcriptome_fusion_caller_Keep_STAR_Fusion_BAM|default(true) %}
    - {{ results_dir }}/{{ sample.name }}_starfusion.bam
    - {{ results_dir }}/{{ sample.name }}_starfusion.bam.bai
    {% endif %}
  reset: predecessors
  cpus: 2
  mem: 8G
  walltime: "24:00:00"
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p {{ temp_dir }}/_starF_checkpoints
    mkdir -p {{ temp_dir }}/star-fusion.preliminary

    module load {{ constants.tools.samtools.module }}
    module load {{ constants.tools.star_fusion.module }}
    sf_path=$(dirname `which STAR-Fusion`)

    export CTAT_GENOME_LIB={{ constants.phoenix.starfusion_index }}

    ${sf_path}/util/STAR-Fusion.map_chimeric_reads_to_genes \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
      -J {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction \
      > {{ temp_dir }}/star-fusion.preliminary/star-fusion.junction_breakpts_to_genes.txt

    ${sf_path}/util/STAR-Fusion.handle_multimapping_reads \
      -J {{ temp_dir }}/star-fusion.preliminary/star-fusion.junction_breakpts_to_genes.txt \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
      --filt_file {{ temp_dir }}/star-fusion.preliminary/star-fusion.junction_breakpts_to_genes.txt.fail \
      -M 50 \
      > {{ temp_dir }}/star-fusion.preliminary/star-fusion.junction_breakpts_to_genes.txt.pass

    ${sf_path}/util/STAR-Fusion.predict \
      -J {{ temp_dir }}/star-fusion.preliminary/star-fusion.junction_breakpts_to_genes.txt.pass \
      -O {{ temp_dir }}/star-fusion.preliminary/star-fusion

    ${sf_path}/util/STAR-Fusion.filter \
      --fusion_preds {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary \
      -J {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction \
      --tmpdir /tmp \
      --min_junction_reads 1 \
      --min_sum_frags 2 \
      --require_LDAS 1 \
      --max_promiscuity 10 \
      --min_pct_dom_promiscuity 10 \
      --min_novel_junction_support 3 \
      --min_alt_pct_junction 10 \
      --aggregate_novel_junction_dist 5 \
      --min_spanning_frags_only 5 \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
      --out_prefix {{ temp_dir }}/star-fusion.preliminary/star-fusion

    {# cp filtered intermediate file for later development usage #}
    cp {{ temp_dir }}/star-fusion.preliminary/star-fusion.filter.intermediates_dir/star-fusion.post_blast_and_promiscuity_filter.abridged {{ results_dir }}/{{ sample.name }}_star_fusion.post_blast_and_promiscuity_filter.abridged

    {% if studyDisease == "Multiple Myeloma" | default(false) %}
    JUNCTION_READS=$(tail -n1 {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction | gawk '{ print $3 }')
    {#
      samtools view
        -c        print only the count of matching records
        -f INT    only include reads with all  of the FLAGs in INT present
        -F INT    only include reads with none of the FLAGS in INT present

      -f 65     = 0x40 and 0x1
      -F 2304   = 0x100 and 0x800
      0x1	PAIRED	paired-end (or multiple-segment) sequencing technology
      0x40	READ1	the first segment in the template
      0x100	SECONDARY	secondary alignment
      0x800	SUPPLEMENTARY	supplementary alignment
    #}
    IG_READS=$(samtools view \
      --threads 2 \
      -c -f 65 -F 2304 \
      {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam \
      chr2:88857160-90367699 \
      chr14:105583730-106879812 \
      chr22:21991098-22923034)
    NREADS=$((JUNCTION_READS-IG_READS))
    {% else %}
    NREADS=$(tail -n1 {{ results_dir }}/{{ sample.name }}_Chimeric.out.junction | gawk '{ print $3 }')
    {% endif %}

    ${sf_path}/util/incorporate_FFPM_into_final_report.pl \
      {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.filtered $NREADS \
      > {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.filtered.FFPM

    ${sf_path}/util/append_breakpoint_junction_info.pl \
      {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.filtered.FFPM {{ constants.phoenix.starfusion_index }} \
      > {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo

    ${sf_path}/FusionAnnotator/FusionAnnotator \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
      --annotate {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo \
      > {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot

    ${sf_path}/FusionFilter/util/filter_by_annotation_rules.pl \
      --fusions {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }}

    ${sf_path}/util/filter_likely_RT_artifacts.pl {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot.annot_filter.pass

    ${sf_path}/util/remove_lesser_candidates_at_breakpoint.pl {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot.annot_filter.pass.RTartifact.pass

    ${sf_path}/util/filter_by_min_FFPM.pl {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot.annot_filter.pass.RTartifact.pass.brkptselect.pass 0.1

    cp {{ temp_dir }}/star-fusion.preliminary/star-fusion.fusion_candidates.preliminary.wSpliceInfo.wAnnot.annot_filter.pass.RTartifact.pass.brkptselect.pass.minFFPM.0.1.pass {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.tsv

    ${sf_path}/util/column_exclusions.pl {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.tsv JunctionReads,SpanningFrags > {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.tsv

    ${sf_path}/FusionAnnotator/util/fusion_to_coding_region_effect.pl \
      --fusions {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.tsv \
      --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
      > {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.coding_effect.tsv

    ${sf_path}/util/get_FUSION_EVIDENCE_fastqs.pl \
      --fusions {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.tsv \
      --output_prefix {{ results_dir }}/{{ sample.name }}_star_fusion \
      --left_fq {% for fq in r1fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %} \
      --right_fq {% for fq in r2fqlist %}"temp/fastqs/{{ fq.basename }}"{% if not loop.last%},{% endif %}{% endfor %}

    echo "STAR-Fusion complete.  See output: {{ results_dir }}/star-fusion.fusion_predictions.tsv (or .abridged.tsv version)"

    {% if tasks.RNA_transcriptome_fusion_caller_Keep_STAR_Fusion_BAM|default(true) %}
    mv {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam {{ results_dir }}/{{ sample.name }}_starfusion.bam
    mv {{ temp_dir }}/{{ sample.name }}.Aligned.sorted.bam.bai {{ results_dir }}/{{ sample.name }}_starfusion.bam.bai
    {% endif %}

- name: fusion_inspector_{{ sample.name }}
  tags: [{{ sample.gltype }}, transcriptome, fusion_caller, STAR_Fusion, {{ sample.name }}]
  input:
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.coding_effect.tsv
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_1.fq
    - {{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_2.fq
  output:
    - {{ results_dir }}/{{ sample.name }}_finspector.bed
    - {{ results_dir }}/{{ sample.name }}_finspector.fa
    - {{ results_dir }}/{{ sample.name }}_finspector.fusion_inspector_web.html
    - {{ results_dir }}/{{ sample.name }}_finspector.fusion_inspector_web.json
    - {{ results_dir }}/{{ sample.name }}_finspector.junction_reads.bam
    - {{ results_dir }}/{{ sample.name }}_finspector.junction_reads.bam.bai
    - {{ results_dir }}/{{ sample.name }}_finspector.spanning_reads.bam
    - {{ results_dir }}/{{ sample.name }}_finspector.spanning_reads.bam.bai
    - {{ results_dir }}/{{ sample.name }}_finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz
    - {{ results_dir }}/{{ sample.name }}_finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz.tbi
    - {{ results_dir }}/{{ sample.name }}_Trinity-GG.fasta
  cpus: 2
  mem: 16G
  walltime: "24:00:00"
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.star_fusion.module }}
    sf_path=$(dirname `which STAR-Fusion`)

    PROJECT_ROOT=$PWD

    mkdir -p "{{ temp_dir }}"

    cd "{{ temp_dir }}"

    NUM_FUSIONS=$(grep -w "#FusionName" -c -v ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.coding_effect.tsv)
    if (( NUM_FUSIONS == 0 )); then
        echo "Zero fusions found, skipping FusionInspector"
    else
        ${sf_path}/FusionInspector/FusionInspector \
          --fusions ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_star_fusion.fusion_predictions.abridged.coding_effect.tsv \
          --out_prefix finspector \
          --min_junction_reads 1 \
          --min_novel_junction_support 3 \
          --min_spanning_frags_only 5 \
          --STAR_max_mate_dist 100000 \
          --vis \
          --max_promiscuity 10 \
          --output_dir FusionInspector-inspect \
          --genome_lib_dir {{ constants.phoenix.starfusion_index }} \
          --CPU 2 \
          --only_fusion_reads \
          --fusion_contigs_only \
          --left_fq ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_1.fq \
          --right_fq ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_star_fusion.fusion_evidence_reads_2.fq \
          --no_FFPM \
          --include_Trinity \
          --annotate \
          --examine_coding_effect
    fi

    {# Moving fusion inspector files to results dir #}
    mv FusionInspector-inspect/finspector.bed ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.bed
    mv FusionInspector-inspect/finspector.fa ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.fa
    mv FusionInspector-inspect/finspector.fusion_inspector_web.html ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.fusion_inspector_web.html
    mv FusionInspector-inspect/finspector.fusion_inspector_web.json ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.fusion_inspector_web.json
    mv FusionInspector-inspect/finspector.junction_reads.bam ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.junction_reads.bam
    mv FusionInspector-inspect/finspector.junction_reads.bam.bai ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.junction_reads.bam.bai
    mv FusionInspector-inspect/finspector.spanning_reads.bam ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.spanning_reads.bam
    mv FusionInspector-inspect/finspector.spanning_reads.bam.bai ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.spanning_reads.bam.bai
    mv FusionInspector-inspect/finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz
    mv FusionInspector-inspect/finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz.tbi ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_finspector.gmap_trinity_GG.fusions.gff3.bed.sorted.bed.gz.tbi
    mv FusionInspector-inspect/fi_workdir/trinity_GG/Trinity-GG.fasta ${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}_Trinity-GG.fasta

    {# Remove the remaining files #}
    {% set task %}fusion_inspector_{{ sample.name }}{% endset %}
    {% set directory %}{{ temp_dir }}{% endset %}
    {{- remove_files(directory,none,task) }}

{% if tasks.RNA_transcriptome_fusion_caller_Keep_STAR_Fusion_BAM|default(true) %}
{% if cram|default(true) %}
{% set bam_path %}{{ results_dir }}/{{ sample.name }}_starfusion.bam{% endset %}
{% set cram_path %}{{ results_dir }}/{{ sample.name }}_starfusion.cram{% endset %}
{% set aligner = 'star' %}

- name: bam_to_cram_{{ sample.name }}_{{ aligner }}_fusion
  tags: [{{ sample.gltype }}, {{ sample.name }}, bam_to_cram ]
  input: {{ results_dir }}/{{ sample.name }}_starfusion.bam
  output:
    - {{ results_dir }}/{{ sample.name }}_starfusion.cram
    - {{ results_dir }}/{{ sample.name }}_starfusion.cram.crai
  walltime: "8:00:00"
  cpus: 8
  mem: 4G
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.samtools.module }}

    samtools view \
      -C \
      -@ 8 \
      --reference "{{ constants.phoenix.star_fasta }}" \
      -o "{{ cram_path }}" \
      "{{ bam_path }}"

    samtools index "{{ cram_path }}"

    {{- md5sum_bam_cram(sample, aligner) }}
{% endif %}
{% endif %}

{% endmacro -%}
