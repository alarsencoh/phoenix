{% from 'modules/rna/star_fusion.jst' import star_fusion with context %}
{% from 'modules/rna/salmon.jst' import salmon with context %}
{% from 'modules/rna/star_quant.jst' import star_quant with context %}
{% from 'utilities/bam_to_cram.jst' import bam_to_cram with context %}
{% from 'modules/qc/main.jst' import bam_qc with context %}


{% macro rna_fusion_detection(samples) %}

{% for sample in samples.values() if sample.gltype == 'rna' %}
    {% if tasks.RNA_transcriptome_fusion_caller_STAR_Fusion|default(true) %}
    {{- star_fusion(sample) }}
    {% endif %}
{% endfor %}

{% endmacro %}


{% macro rna_quant(samples) %}

{% for sample in samples.values() if sample.gltype == 'rna' %}
    {% set platform = (sample.read_groups.values()|first).rgpm|default('') %}
    {% if platform|lower in ['hiseq4000', 'novaseq6000'] %}
      {% set opt_dup_distance = 2500 %}
    {% else %}
      {% set opt_dup_distance = 100 %}
    {% endif %}

    {% if tasks.RNA_transcriptome_quantify_expression_salmon_fastqs|default(true) %}
      {{- salmon(sample) }}
    {% endif %}

    {% if tasks.RNA_alignment_rna_alignment_STAR|default(true) %}
      {{- star_quant(sample, opt_dup_distance) }}
      {{- bam_to_cram(sample, aligner='star') }}
      {{- bam_qc(sample, aligner='star') }}
    {% endif %}
{% endfor -%}

{% endmacro -%}
