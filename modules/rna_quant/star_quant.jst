# Run STAR RNA Alignment for quantification
{% macro star_quant(sample) %}

{% set r1fqlist = [] %}
{% set r2fqlist = [] %}
{% for rgid, rg in sample.read_groups.items() %}
    {% for fq in rg.data_files|selectattr('fastqCode', 'eq', 'R1') %}
        {% do r1fqlist.append(fq.fastqPath) %}
    {% endfor %}
    {% for fq in rg.data_files|selectattr('fastqCode', 'eq', 'R2') %}
        {% do r2fqlist.append(fq.fastqPath) %}
    {% endfor %}
{% endfor %}

- name: star_quant_{{ sample.name }}
  methods: >
    Transcript quantification for {{ sample.name }} was performed with
    {{ constants.tools.star_2_6_1d.verbose }} followed by TODO...
  output: {{ sample.glType }}/star-quant/{{ sample.name }}/
  cpus: 16
  walltime: "24:00:00"
  cmd: |
    set -ue
    module load {{ constants.tools.star_2_6_1d.module }}

    mkdir -p "{{ sample.glType }}/star-quant/{{ sample.name }}/"

    STAR \
      --limitOutSAMoneReadBytes 90000000 \
      --runMode alignReads \
      --outSAMtype SAM \
      --outFilterType BySJout \
      --outFilterMultimapNmax 10 \
      --outFilterMismatchNmax 10 \
      --outFilterMismatchNoverLmax 0.1 \
      --alignIntronMin 20 \
      --alignIntronMax 1000000 \
      --alignMatesGapMax 1000000 \
      --alignSJoverhangMin 8 \
      --alignSJDBoverhangMin 1 \
      --seedSearchStartLmax 30 \
      --chimSegmentMin 15 \
      --chimJunctionOverhangMin 15 \
      --runThreadN 14 \
      --genomeLoad NoSharedMemory \
      --outSAMstrandField intronMotif \
      --outSAMunmapped Within \
      --outSAMmapqUnique 255 \
      --genomeDir "{{ constants.phoenix.reference_index_prefix }}" \
      --readFilesIn \
      <(zcat {% for fq in r1fqlist %}"{{ fq }}" {% endfor %}) \
      <(zcat {% for fq in r2fqlist %}"{{ fq }}" {% endfor %}) \
      --outSAMattrRGline ${RGTAGLIST} \
      --outSAMmode Full \
      > "{{ sample.glType }}/star-quant/{{ sample.name }}/"


- name: htseq_{{ sample.name }}
  output: {{ sample.glType }}/htseq/{{ sample.name }}/
  cpus: 16
  walltime: "24:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.htseq_0_6_1.module }}
    
    htseq TODO

{% endmacro %}
