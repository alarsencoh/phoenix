# These macros are run on exome bams from the dna_alignment module.

{% from 'modules/qc/stats2json.jst' import stats2json with context %}

{% macro bam_qc_gatk_collecthsmetrics(sample, aligner='bwa') %}
{% if tasks["Exome_quality_control_stats_gatk_CollectHsMetrics"]|default(true) %}

  {% set bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
  {% set results_dir %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/stats{% endset %}
  {% set output_file %}{{ results_dir }}/{{ bam|basename }}.hs_metrics{% endset %}

- name: gatk_collecthsmetrics_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype }}, quality_control, stats, gatk_CollectHsMetrics, {{ sample.name }}]
  input: {{ bam }}
  output: {{ output_file }}
  walltime: "8:00:00"
  cpus: 2
  mem: 16G
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.gatk.module }}

    mkdir -p "{{ results_dir }}"

    gatk CollectHsMetrics \
      --java-options "-Xmx14G" \
      --METRIC_ACCUMULATION_LEVEL null \
      --METRIC_ACCUMULATION_LEVEL ALL_READS \
      --METRIC_ACCUMULATION_LEVEL LIBRARY \
      --INPUT "{{ bam }}" \
      --OUTPUT "{{ results_dir }}/{{ bam|basename }}.hs_metrics" \
      --REFERENCE_SEQUENCE "{{ constants.phoenix.reference_fasta }}" \
      --TARGET_INTERVALS "{{ sample.capture_kit.targets_interval_list }}" \
      --BAIT_INTERVALS "{{ sample.capture_kit.baits_interval_list }}"


{{ stats2json(sample, output_file, "picard_hs_metrics", aligner=aligner) }}
{% endif %}
{% endmacro %}
