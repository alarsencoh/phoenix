# This macro is used to run the samStats2json.py script on individual
# stats files produced by bam_qc steps to get a structured json file
# that help facilitate downstream analysis and upload to LIMS via REST api integration.

{% macro stats2json(sample, input_file, file_type, aligner='bwa', sample_name=none, library_name=none, read_group_name=none ) %}
{% set results_dir %}./{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/stats{% endset %}
{% set in_cloud = backend.startswith('cloud_') %}

- name: stats2json_{{ sample.name }}_{{ file_type }}
  tags: [{{ sample.gltype }}, quality_control, stats, stats2json, {{ sample.name }}]
  cloud_args:
    reference_input:
      - /home/dominic/jetstream_pipelines/pw_phoenix/./required_scripts/{{ constants.phoenix.stats2json }}
    {# wrapper_frontmatter: 'export PATH_TO_PHOENIX_REPO=.' #}
    singularity_container: '/containers/phoenix_stats2json.sif'
    transfer_container_to_remote: False
  input: {{ input_file }}
  output:
    - {{ input_file }}.json
  walltime: "0:10:00"
  cpus: 1
  cmd: |
    set -eu
    set -o pipefail

    #module load {{ constants.tools.python_3_7_2.module }}
    
    {% if in_cloud %}
    python ${PATH_TO_PHOENIX_REPO}/required_scripts/{{ constants.phoenix.stats2json }} \
    {% else %}
    ${PATH_TO_PHOENIX_REPO}/required_scripts/{{ constants.phoenix.stats2json }} \
    {% endif %}
      --output {{ input_file }}.json \
      {% if sample_name is not none %}
      --samplename sample_name \
      {% endif %}
      {% if library_name is not none %}
      --libraryname library_name \
      {% endif %}
      {% if read_group_name is not none %}
      --readgroupname read_group_name \
      {% endif %}
      {{ input_file }} \
      {{ file_type }}

{% endmacro %}