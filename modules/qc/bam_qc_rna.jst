# These macros are run on rna bams from the star_quant module.

{% from 'modules/qc/stats2json.jst' import stats2json with context %}

{% macro bam_qc_gatk_collectrnaseqmetrics(sample, aligner='star') %}
{% set bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/stats{% endset %}
{% set rna_metrics %}{{ results_dir }}/{{ bam|basename }}.rna_metrics{% endset %}

- name: gatk_collectrnaseqmetrics_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype }}, quality_control, stats, gatk_CollectRnaSeqMetrics, {{ sample.name }}]
  input: {{ bam }}
  output:
    - {{ rna_metrics }}
    - {{ rna_metrics }}.pdf
  walltime: "12:00:00"
  cpus: 2
  mem: 16G
  cmd: |
    set -eu
    set -o pipefail
    module load {{ constants.tools.gatk.module }}
    module load {{ constants.tools.R.module }}

    mkdir -p "{{ results_dir }}"

    gatk CollectRnaSeqMetrics \
      --java-options "-Xmx14G" \
      --IGNORE_SEQUENCE chrEBV \
      --STRAND_SPECIFICITY {{ constants.phoenix.strandedness_options[sample.strandedness].collectrnaseqmetrics }} \
      --VALIDATION_STRINGENCY LENIENT \
      --REF_FLAT "{{ constants.phoenix.ref_flat }}" \
      --RIBOSOMAL_INTERVALS "{{ constants.phoenix.ribo_locations }}" \
      --METRIC_ACCUMULATION_LEVEL ALL_READS \
      --METRIC_ACCUMULATION_LEVEL SAMPLE \
      --METRIC_ACCUMULATION_LEVEL LIBRARY \
      --INPUT "{{ bam }}" \
      --CHART_OUTPUT {{ results_dir }}/{{ bam|basename }}.rna_metrics.pdf \
      --OUTPUT "{{ results_dir }}/{{ bam|basename }}.rna_metrics"

{{ stats2json(sample, rna_metrics, "picard_rna_metrics", aligner=aligner) }}

{% endmacro %}

{% macro bam_qc_rna_BTcell_loci(sample, aligner='star') %}
{% set bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/stats{% endset %}

- name: rna_getBTcellLociCounts_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype }}, quality_control, stats, BTcellLociCounts, {{ sample.name }}]
  input: {{ bam }}
  output: {{ results_dir }}/{{ bam|basename }}.BTcell.loci.counts.txt
  walltime: "8:00:00"
  cpus: 2
  cmd: |
    set -eu
    set -o pipefail
    module load {{ constants.tools.samtools.module }}

    mkdir -p "{{ results_dir }}"

    samtools bedcov "{{ constants.phoenix.lymphocyteReceptor_loci_bed }}" "{{ bam }}" > "{{ results_dir }}/{{ bam|basename }}.BTcell.loci.counts.txt"

{% endmacro %}