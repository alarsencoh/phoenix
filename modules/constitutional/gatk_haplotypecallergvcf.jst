# Call constitutional variants with haplotype caller. In order to call
# variants, this step must be followed with genotype gvcfs task.
{% macro haplotypecallergvcf(sample, aligner='bwa') %}
{% set bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{% set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}_{{ aligner }}{% endset %}
{% set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}{% endset %}
{% set gvcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.hc.g.vcf.gz{% endset %}

{% for batch in constants.phoenix.calling_intervals %}
- name: haplotypecaller_gvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  input: {{ bam }}
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  cmd: |
    set -euv
    module load {{ constants.tools.gatk_4_1_0_0.module }}

    mkdir -p "{{ temp_dir }}"

    gatk HaplotypeCaller \
      --java-options "-Xmx14G" \
      -ERC GVCF \
      -R {{ constants.phoenix.reference_fasta }} \
      -I "{{ bam }}" \
      {% for interval in batch %}
      -L "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      -O "{{ temp_dir }}/{{ loop.index }}.g.vcf.gz"

{% endfor %}


- name: haplotypecaller_gvcf_merge_{{ sample.name }}_{{ aligner }}
  after: 
    {% for batch in constants.phoenix.calling_intervals %}
    - haplotypecaller_gvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
    {% endfor %}
  output: {{ gvcf }}
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  cmd: |
    set -eu
    module load {{ constants.tools.gatk_4_1_0_0.module }}

    mkdir -p "{{ results_dir }}"

    gatk MergeVcfs \
      --java-options "-Xmx14G" \
      {% for batch in constants.phoenix.calling_intervals %}
      --INPUT "{{ temp_dir }}/{{ loop.index }}.g.vcf.gz" \
      {% endfor %}
      --OUTPUT "{{ gvcf }}"

    {% if not debug %}
    rm -r "{{ temp_dir }}"
    {% endif %}

{% endmacro %}

