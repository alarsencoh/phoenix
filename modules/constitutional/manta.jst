{% from 'utilities/remove_files.jst' import remove_files with context %}

{% macro manta_constitutional(sample, aligner='bwa', taskPrefix='Genome') %}
{% set bam %}./{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}./{{ sample.gltype }}/constitutional_structural_calls/manta/{{ sample.name }}{% endset %}
{% set temp_dir %}./temp/{{ sample.gltype }}/constitutional_structural_calls/manta/{{ sample.name }}{% endset %}
{% set in_cloud = backend.startswith('cloud_') %}

- name: manta_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype}}, constitutional, structural_caller, manta, {{ sample.name }}]
  methods: > 
    Constitutional structural variants and indels for {{ sample.name }} 
    ({{ aligner }}) were called with {{ constants.tools.manta.verbose }}.
  cloud_args:
    reference_input:
      - {{ constants.phoenix.reference_fasta|cloudpath }}
      - {{ constants.phoenix.reference_fai|cloudpath }}
    {# wrapper_frontmatter: 'export PATH=$PATH:/home/dominic/software/manta-1.6.0.centos6_x86_64/bin' #}
    {# wrapper_frontmatter: 'export PATH=$PATH:/app/software/manta/1.6.0/bin' #}
    singularity_container: '/containers/phoenix_manta.sif'
    transfer_container_to_remote: False
  input: 
    - {{ bam }}
    - {{ bam }}.bai
  output:
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz.tbi
    {# - {{ results_dir }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz
    - {{ results_dir }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi
    - {{ results_dir }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz
    - {{ results_dir }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz.tbi #}
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz
    - {{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz.tbi
  cpus: 8
  mem: 80G
  walltime: "48:00:00"
  cmd: |
    set -eu
    set -o pipefail

    #module load {{ constants.tools.manta.module }}
    #module load {{ constants.tools.htslib.module }}
    #module load {{ constants.tools.python_2_7_15.module }}

    {# Purge any existing run files prior to starting #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    {#
    # In order to restrict calling to only the specified regions
    # Manta requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Manta.
    #}
    MANTA_BED="{{ temp_dir }}/callRegions.bed"
    TAB=$'\t'
    cat <<EOF > "${MANTA_BED}"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    head -n 24 "{{ temp_dir }}/callRegions.bed" > "{{ temp_dir }}/mantaRegions.bed"
    MANTA_BED="{{ temp_dir }}/mantaRegions.bed"
    rm "{{ temp_dir }}/callRegions.bed"
    bgzip -f "${MANTA_BED}"
    tabix -f -p bed "${MANTA_BED}.gz"

    {# Build the Manta run file #}
    configManta.py \
      {% if sample.gltype == 'exome' %}
      --exome \
      {% endif %}
      --scanSizeMb 12 \
      --callMemMb 10 \
      --callRegions "${MANTA_BED}.gz" \
      --bam "{{ bam }}" \
      --referenceFasta "{{ constants.phoenix.reference_fasta|cloudbasename(in_cloud) }}" \
      --runDir "{{ temp_dir }}"

    {# Execute on the local machine with 19 parallel jobs #}
    "{{ temp_dir }}/runWorkflow.py" -m local -j 19

    {# Save all the vcs in the sample dir #}
    mkdir -p "{{ results_dir }}" || true

    mv "{{ temp_dir }}/results/variants/candidateSmallIndels.vcf.gz" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz"
    mv "{{ temp_dir }}/results/variants/candidateSmallIndels.vcf.gz.tbi" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz.tbi"
    mv "{{ temp_dir }}/results/variants/candidateSV.vcf.gz" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz"
    mv "{{ temp_dir }}/results/variants/candidateSV.vcf.gz.tbi" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi"
    mv "{{ temp_dir }}/results/variants/diploidSV.vcf.gz" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz"
    mv "{{ temp_dir }}/results/variants/diploidSV.vcf.gz.tbi" "{{ results_dir }}/{{ sample.name }}.{{ aligner }}.manta.diploidSV.vcf.gz.tbi"

    {# Remove the remaining files #}
    {% if not in_cloud %}
        {% set task %}manta_{{ sample.name }}_{{ aligner }}{% endset %}
        {% set directory %}{{ temp_dir }}{% endset %}
        {{- remove_files(directory,none,task) }}
    {% endif %}

{% endmacro %}