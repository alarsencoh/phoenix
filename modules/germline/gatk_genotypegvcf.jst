{% from 'modules/annotation/snpeff.jst' import snpeff with context %}

{% macro genotypegvcf(sample, aligner='bwa') %}
{% set all_vcf %}{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.hc.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.hc.pass.vcf.gz{% endset %}
{% set ann_vcf %}{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.hc.ann.vcf.gz{% endset %}

{% for batch in constants.phoenix.calling_intervals %}
- name: genotypegvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  tags: [gatk, GenotypeGVCFs, {{ sample.gltype }}]
  input: {{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.hc.g.vcf.gz
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  cmd: |
    set -euv
    module load {{ constants.tools.gatk_4_1_0_0.module }}
    mkdir -p "temp/{{ sample.name }}_{{ aligner }}_hc_vcf_chunks/"

    gatk GenotypeGVCFs \
      --tmp-dir "temp" \
      --java-options "-Xmx14G" \
      --reference "{{ constants.phoenix.reference_fasta }}" \
      {% for interval in batch %}
      --intervals "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      --variant "{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.hc.g.vcf.gz" \
      --output "temp/{{ sample.name }}_{{ aligner }}_hc_vcf_chunks/{{ loop.index }}.vcf.gz"


- name: cnnscorevariants2d_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  tags: [gatk, CNNScoreVariants, {{ sample.gltype }}]
  after: genotypegvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  walltime: "24:00:00"
  cpus: 6
  mem: 24G
  cmd: |
    set -euv
    module load {{ constants.tools.gatk_4_1_0_0.module }}
    source activate gatk
    mkdir -p "temp/{{ sample.name }}_{{ aligner }}_hc_scoredvcf_chunks/"

    gatk CNNScoreVariants \
      --java-options "-Xmx20G" \
      --tensor-type read_tensor \
      {% for interval in batch %}
      --intervals "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      --reference "{{ constants.phoenix.reference_fasta }}" \
      --input "{{ sample.gltype}}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam" \
      --variant "temp/{{ sample.name }}_{{ aligner }}_hc_vcf_chunks/{{ loop.index }}.vcf.gz" \
      --output "temp/{{ sample.name }}_{{ aligner }}_hc_scoredvcf_chunks/{{ loop.index }}.vcf.gz"

{% endfor %}


- name: haplotypecaller_merge_{{ sample.name }}_{{ aligner }}
  tags: [bcftools, concat, {{ sample.gltype }}]
  after-re: cnnscorevariants2d_{{ sample.name }}_{{ aligner }}_.*
  output: {{ all_vcf }}
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}

    mkdir -p "{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}/"

    bcftools concat \
      -O z \
      -o "{{ all_vcf }}" \
      {% for batch in constants.phoenix.calling_intervals %}
       "temp/{{ sample.name }}_{{ aligner }}_hc_scoredvcf_chunks/{{ loop.index }}.vcf.gz" \
      {% endfor %}

    bcftools index -tf "{{ all_vcf }}"

    {% if not debug %}
    rm -r "temp/{{ sample.name }}_{{ aligner }}_hc_vcf_chunks/"
    rm -r "temp/{{ sample.name }}_{{ aligner }}_hc_scoredvcf_chunks/"
    {% endif %}


- name: haplotypecaller_filter_variants_{{ sample.name }}_{{ aligner }}
  tags: [gatk, FilterVariantTranches, bcftools, filter, {{ sample.gltype }}]
  after: haplotypecaller_merge_{{ sample.name }}_{{ aligner }}
  output: {{ pass_vcf }}
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  cmd: |
    set -euv
    module load {{ constants.tools.gatk_4_1_0_0.module }}
    module load {{ constants.tools.samtools_1_9.module }}

    # Annotate with FilterVariantTranches 
    gatk FilterVariantTranches \
      --java-options "-Xmx14G" \
      --info-key CNN_2D \
      --snp-tranche 99.9 \
      --indel-tranche 99.5 \
      {% for resource in constants.phoenix.gatk_cnn_resources %}
      --resource "{{ resource }}" \
      {% endfor %}
      --variant "{{ all_vcf }}" \
      --output "temp/{{ sample.name }}.{{ aligner }}.hc.fvt.vcf.gz" \
       
    # Then filter out the passing variants to a separate file
    bcftools filter \
      -O z \
      -i 'FILTER == "."' \
      {% if sample.gltype|lower == 'exome' %}
      --regions-file "{{ sample.capture_kit.extended_bed }}" \
      {% endif %}
      "temp/{{ sample.name }}.{{ aligner }}.hc.fvt.vcf.gz" \
      > "{{ pass_vcf }}"

    rm "temp/{{ sample.name }}.{{ aligner }}.hc.fvt.vcf.gz"
    bcftools index -tf "{{ pass_vcf }}"


{{ snpeff(pass_vcf, ann_vcf) }}

{% endmacro %}

