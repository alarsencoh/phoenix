# Call variants between pairs of sequencing data
# WARNING - This pairs together all tumor and constitutional samples (of the same glType)
# without comparing any sample identifiers. This means multiple individuals in the same 
# project will be incorrectly paired together for somatic variant calling.

# Have to add normal.name and tumor.name to the pairs objects instead of using normal.sampleName
# because the samples are grouped and aligned by sampleName or sampleMergeKey. 

{% from 'modules/somatic_variant_calling/mutect2.jst' import mutect2 with context %}
{% from 'modules/somatic_variant_calling/strelka2.jst' import strelka2 with context %}
{% from 'modules/somatic_variant_calling/lancet.jst' import lancet with context %}

{% macro somatic_variant_calling(samples) %}

{% if pairs is defined %}
    # Pairs were already defined
{% else %}
    # Build up the somatic variant calling sample pairs object by pairing every tumor 
    # to every normal of the same glType.
    {% set pairs = [] %}
    {% for tumor in samples.values() if tumor.subGroup|lower == 'tumor' and tumor.glType|lower == 'exome' %}
        {% for normal in samples.values() if normal.subGroup|lower == 'constitutional' and normal.glType|lower == 'exome' %}
            {% set pair_name = normal.name + '-' + tumor.name %}
            {% do pairs.append({'name': pair_name, 'glType': normal.glType, 'normal': normal, 'tumor': tumor}) %}
        {% endfor %}
    {% endfor %}
    {% for tumor in samples.values() if tumor.subGroup|lower == 'tumor' and tumor.glType|lower == 'genome' %}
        {% for normal in samples.values() if normal.subGroup|lower == 'constitutional' and normal.glType|lower == 'genome' %}
            {% set pair_name = normal.name + '-' + tumor.name %}
            {% do pairs.append({'name': pair_name, 'glType': normal.glType, 'normal': normal, 'tumor': tumor}) %}
        {% endfor %}
    {% endfor %}
{% endif %}

{% for pair in pairs %}
    {{- mutect2(pair, aligner='bwa') }}
    {{- strelka2(pair, aligner='bwa') }}
    {{- lancet(pair, aligner='bwa') }}
{% endfor %}

{% endmacro %}
