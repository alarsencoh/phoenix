{% macro vcfmerger2(pair, aligner='bwa') %}

{% set bam %}{{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}

{% set vcfs=[] %}

{% for caller in pair.callers %}
{% set gzipped_path %}{{ pair.glType }}/somatic_variant_calls/{{ caller }}/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.{{ caller }}.pass.vcf.gz{% endset %}
{% set unzipped_path %}temp/vcfmerger2/{{ pair.name }}_{{ aligner }}_{{ caller }}.vcf{% endset %}
{% set prepped_path = 'temp/%s.%s.prep.vcf'|format(pair.name, caller) %}
{% do vcfs.append({
  'gzipped_path': gzipped_path, 
  'unzipped_path': unzipped_path,
  'prepped_path': prepped_path
}) %}

- name: vcfmerger2_prep_{{ caller }}_{{ pair.name }}_{{ aligner }}
  tags: [vcfMerger2, {{ pair.name }}]
  input: 
    - {{ gzipped_path }}
  cpus: 2
  walltime: "24:00:00"
  cmd: |
    set -ue

    module load {{ constants.tools.samtools_1_9.module }}
    module load {{ constants.tools.python_3_6_0.module }}

    rm -r "temp/vcfmerger2/" || true
    mkdir "temp/vcfmerger2/"
    gunzip -c "{{ gzipped_path }}" > "{{ unzipped_path }}"

    # Locate the prep_vcf.sh script relative to vcfMerger2.py 
    PREPVCF="$(dirname $(dirname $(which vcfMerger2.py)))"/prep_vcfs/prep_vcf.sh
    
    ${PREPVCF} \
      -g "{{ constants.phoenix.reference_fasta }}" \
      --toolname "{{ caller }}" \
      --normal-sname "{{ pair.normal.rgsm }}" \
      --tumor-sname "{{ pair.tumor.rgsm }}" \
      --vcf "{{ unzipped_path }}" \
      -o "{{ prepped_path }}"

{% endfor %}


- name: vcfmerger2_{{ pair.name }}_{{ aligner }}
  tags: [vcfMerger2, {{ pair.name }}]
  after:
  {% for caller in pair.callers %}
    - vcfmerger2_prep_{{ caller }}_{{ pair.name }}_{{ aligner }}
  {% endfor %}
  cpus: 4
  walltime: "24:00:00"
  cmd: |
    set -ue

    module load {{ constants.tools.samtools_1_9.module }}
    
    vcfMerger2.py \
      --toolnames "{{ pair.callers|join('|') }}" \
      --vcfs "{{ vcfs|map(attribute='prepped_path')|join('|') }}" \
      -o "{{ pair.glType }}/somatic_variant_calls/vcfMerger2/{{ pair.name }}/{{ pair.name }}.merged.vcf"

    rm -r "temp/vcfmerger2/"

{% endmacro %}