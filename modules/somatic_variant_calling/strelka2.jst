# Important! Strelk2 currently has problems processing genomes with a large 
# number of contigs. The workaround involves limiting the calling to major 
# contigs (1-22,X,Y,MT for example) to avoid slowdown issues.

{% macro strelka2(pair, aligner='bwa') %}
- name: manta_somatic_{{ pair.name }}_{{ aligner }}
  methods: > 
    Structural variants (SVs) and indels for {{ pair.name }} ({{ aligner }}) were called with 
    {{ constants.tools.manta_1_4.verbose }}.
  input:
    - {{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam
    - {{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam
  output: {{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}/results_{{ aligner }}
  cpus: 40
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.manta_1_4.module }}
    module load {{ constants.tools.samtools_1_9.module }}

    RUNDIR="{{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}_{{ aligner }}/{{ pair.name }}.{{ aligner }}"

    # Purge any existing run files prior to starting
    rm -r "${RUNDIR}" || true
    mkdir -p "${RUNDIR}"

    # In order to restrict calling to only the specified regions
    # manta requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Manta.
    MANTA_BED="${RUNDIR}/callRegions.bed"

    TAB=$'\t'
    cat <<EOF > "${MANTA_BED}"
    {% for batch in constants.phoenix.calling_intervals %}
    {% for interval in batch %}
    {{ interval.contig }}${TAB}{{ interval.start }}${TAB}{{ interval.stop }}
    {% endfor %}
    {% endfor %}
    EOF

    bgzip -f "${MANTA_BED}"
    tabix -f -p bed "${MANTA_BED}.gz"

    # Some settings are only configurable via tha ini file. Here 
    # we generate this ini file and save it to the run dir.
    MANTA_CONFIG="${RUNDIR}/config.ini"

    cat <<EOF > "${MANTA_CONFIG}"
    [manta]
    enableRemoteReadRetrievalForInsertionsInCancerCallingModes = 1
    EOF

    # Build the Manta run file
    configManta.py \
      {% if pair.glType == 'exome' %}
      --exome \
      --generateEvidenceBam \
      {% endif %}
      --callRegions "${MANTA_BED}" \
      --config "${MANTA_CONFIG}" \
      --normalBam "{{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam" \
      --tumorBam "{{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam" \
      --referenceFasta "{{ constants.phoenix.reference_fasta_path }}" \
      --runDir "${RUNDIR}"

    # Execute on the local machine with 39 parallel jobs
    "${RUNDIR}/runWorkflow.py" -m local -j 39

    # Move the final results out of the rundir
    mv \
      "${RUNDIR}/results/" \
      "{{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}_{{ aligner }}/"

    # Compress the rest of the files for reference later
    tar -cz --remove-files \
      -f "{{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}_{{ aligner }}/run_dir.tar.gz" \
      "${RUNDIR}"
 

- name: strelka2_{{ pair.name }}_{{ aligner }}
  methods: > 
    Somatic variants for {{ pair.name }} ({{ aligner }}) were called with 
    {{ constants.tools.strelka_2_9_2.verbose }}.
  input:
    - {{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam
    - {{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam
    - {{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}/results_{{ aligner }}
  output: {{ pair.glType }}/{{ pair.name }}_{{ aligner }}/strelka2/
  cpus: 28
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.strelka_2_9_2.module }}

    RUNDIR="{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}"

    # Purge any existing run files prior to starting
    rm -r "${RUNDIR}" || true
    mkdir -p "${RUNDIR}"

    cat <<EOF > "${RUNDIR}/config.ini"
    [manta]
    isWriteRealignedBam = 1
    EOF

    configureStrelkaSomaticWorkflow.py \
      {% if pair.glType == 'exome' %}
      --exome \
      {% endif %}
      --config "${RUNDIR}/config.ini" \
      --normalBam "{{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam" \
      --tumorBam "{{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam" \
      --indelCandidates "{{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}/results_{{ aligner }}/variants/candidateSmallIndels.vcf.gz" \
      --ref "{{ constants.phoenix.reference_fasta_path }}" \
      --runDir "${RUNDIR}"

    # Execute on the local machine with 28 parallel jobs
    "${RUNDIR}/runWorkflow.py" -m local -j 28

     # Move the final results out of the rundir
    mv \
      "${RUNDIR}/results" \
      "{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/results_{{ aligner }}"

    # Compress the workspace files after the run completes successfully
    tar -cz --remove-files \
      -f "{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.tar.gz" \
      "${RUNDIR}"

{% endmacro %}
