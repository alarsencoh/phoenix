{% macro strelka2_somatic(pair, aligner='bwa') %}
- name: strelka2_somatic_{{ pair.name }}_{{ aligner }}
  tags: [strelka2, strelka2-somatic, {{ pair.glType }}]
  methods: > 
    Somatic variants for {{ pair.name }} ({{ aligner }}) were called with 
    {{ constants.tools.strelka_2_9_2.verbose }}.
  input:
    - {{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam
    - {{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam
    - {{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}_{{ aligner }}/
  output: 
    - {{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/
  cpus: 40
  walltime: "24:00:00"
  cmd: |
    set -euv
    module load {{ constants.tools.strelka_2_9_2.module }}
    module load {{ constants.tools.samtools_1_9.module }}

    PAIR_DIR="{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}_{{ aligner }}"
    RUN_DIR="${PAIR_DIR}/run_dir"

    # Purge any existing run files prior to starting
    rm -r "${RUN_DIR}" || true
    mkdir -p "${RUN_DIR}"

    # In order to restrict calling to only the specified regions
    # strelka requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Strelka.
    STRELKA_BED="${PAIR_DIR}/callRegions.bed"
    TAB=$'\t'
    cat <<EOF > "${STRELKA_BED}"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "${STRELKA_BED}"
    tabix -f -p bed "${STRELKA_BED}.gz"

    # Some settings are only configurable via an ini file. Here
    # we generate this ini file and save it to the run dir.
    STRELKA_CONFIG="${PAIR_DIR}/config.ini"
    cat <<EOF > "${STRELKA_CONFIG}"
    [StrelkaSomatic]
    isWriteRealignedBam = 1
    EOF

    # Build the Strelka run file
    configureStrelkaSomaticWorkflow.py \
      {% if pair.glType == 'exome' %}
      --exome \
      {% endif %}
      --config "${STRELKA_CONFIG}" \
      --callRegions "${STRELKA_BED}.gz" \
      --normalBam "{{ pair.normal.glType }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam" \
      --tumorBam "{{ pair.tumor.glType }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam" \
      --indelCandidates "{{ pair.glType }}/somatic_structural_calls/manta/{{ pair.name }}_{{ aligner }}/variants/candidateSmallIndels.vcf.gz" \
      --ref "{{ constants.phoenix.reference_fasta }}" \
      --runDir "${RUN_DIR}"

    # Execute on the local machine with 39 parallel jobs
    "${RUN_DIR}/runWorkflow.py" -m local -j 39

    # Move the final results out of the run_dir then compress the
    # rest of the files for reference later
    mv "${RUN_DIR}/results/"* "${PAIR_DIR}"
    (cd "${PAIR_DIR}" && tar -cz --remove-files -f "run_dir.tar.gz" "run_dir")


- name: strelka2_filter_variants_{{ pair.name }}_{{ aligner }}
  tags: [strelka2, strelka2-somatic, bcftools, {{ pair.glType }}]
  input:
    - {{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/
  output:
    - {{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.strelka2.all.vcf.gz
    - {{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.strelka2.pass.vcf.gz
  cmd: |
    set -euv
    module load {{ constants.tools.samtools_1_9.module }}

    # Merge the snvs and indels into a final vcf
    bcftools concat \
      -a \
      --threads 2 \
      -O z \
      -o "${PAIR_DIR}/{{ pair.name }}.{{ aligner }}.strelka2.vcf.gz"
      "${PAIR_DIR}/variants/somatic.indels.vcf.gz" \
      "${PAIR_DIR}/variants/somatic.snvs.vcf.gz"

    # Then filter out the PASS variants to a separate file
    bcftools filter \
      -O z \
      -i 'FILTER == "PASS"' \
      "{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.strelka2.all.vcf.gz" \
      > "{{ pair.glType }}/somatic_variant_calls/strelka2/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.strelka2.pass.vcf.gz"


{% endmacro %}
