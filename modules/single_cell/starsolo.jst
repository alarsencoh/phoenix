# Run Single cell analysis of 10x Genomics 3' and 5' scRNAseq assays using starSOLO

{% macro starsolo(files) %}

{% set sample = files[0] %}

{% set results_dir %}{{ sample.gltype }}/starSOLO/{{ sample.name }}_{{ sample.rglb }}{% endset %}
{% set temp_dir %}temp/{{ sample.gltype }}/starSOLO/{{ sample.name }}_{{ sample.rglb }}{% endset %}

{# Local Temp Variables #}
{% set cb_umi_list = [] %}
{% set cdna_list = [] %}
{% for fq in files|selectattr('fastqCode', 'eq', 'R1') %}
  {% do cb_umi_list.append(fq.basename) %}
{% endfor %}
{% for fq in files|selectattr('fastqCode', 'eq', 'R2') %}
  {% do cdna_list.append(fq.basename) %}
{% endfor %}

- name: starsolo_count_{{ sample.name }}_{{ sample.rglb }}
  tags: [{{ sample.gltype }}, single_cell, starsolo_count, {{ sample.name }}_{{ sample.rglb }}]
  methods: >
    Alignment and quantification for {{ sample.name }}_{{ sample.rglb }} was performed with
    {{ constants.tools.star.verbose }} using the genome index.
  input:
  {% for fq in files %}
      - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  output: {{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_starSOLO.bam
  cpus: 20
  mem: 120G
  walltime: "48:00:00"
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.star.module }}
    module load {{ constants.tools.samtools_1_9.module }}

    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"
    mkdir -p "{{ results_dir }}"

    {% for fq in files %}
    ln -rs "temp/fastqs/{{ fq.basename }}" "{{ temp_dir }}/{{ fq.basename }}"
    {% endfor %}

    {#
    STAR genome index and related junction database hardcoded to 100bp read length
    #}
    ( cd {{ temp_dir }} && STAR \
      --runMode alignReads \
      --twopassMode Basic \
      --runThreadN 19 \
      --genomeDir {{ constants.phoenix.star_indices_path }}/100bpReads \
      --genomeLoad NoSharedMemory \
      --sjdbOverhang 99 \
      --readFilesType Fastx \
      --readFilesIn {{ cdna_list|join(',') }} {{ cb_umi_list|join(',') }} \
      --readFilesCommand zcat \
      --outFileNamePrefix {{ sample.name }}_{{ sample.rglb }}_ \
      --outSAMtype BAM SortedByCoordinate \
      --outSAMmode Full \
      --outSAMunmapped Within KeepPairs \
      --outSAMmapqUnique 255 \
      --outSAMattributes NH HI AS nM CR CY UR UY CB UB sM \
      --soloType CB_UMI_Simple \
      --soloCBwhitelist "{{ constants.phoenix.scrna_chemistry_options[sample.assayCode].cell_barcode_whitelist_file }}" \
      --soloCBstart 1 \
      --soloCBlen 16 \
      --soloUMIstart 17 \
      --soloUMIlen "{{ constants.phoenix.scrna_chemistry_options[sample.assayCode].umi_length }}" \
      --soloBarcodeReadLength 0 \
      --soloCBmatchWLtype 1MM_multi_pseudocounts \
      --soloStrand {{ sample.rnaStrandDirection }} \
      --soloFeatures Gene SJ GeneFull Transcript3p \
      --soloUMIdedup 1MM_All \
      --soloUMIfiltering MultiGeneUMI \
      --soloOutFileNames Solo.out/ {{ sample.name }}_{{ sample.rglb }}_genes.tsv {{ sample.name }}_{{ sample.rglb }}_barcodes.tsv {{ sample.name }}_{{ sample.rglb }}_matrixGene.mtx {{ sample.name }}_{{ sample.rglb }}_matrixSJ.mtx {{ sample.name }}_{{ sample.rglb }}_matrixGeneFull.mtx {{ sample.name }}_{{ sample.rglb }}_matrixTranscripts3p.mtx \
      --soloCellFilter CellRanger2.2 5000 0.99 10 )

    # Update permissions so files are readable by all users (first make all folders executable recursively so they can be navigated, then make all files readable)
    chmod -R a+X {{ temp_dir }}/{{ sample.name }}_{{ sample.rglb }}_Solo.out
    chmod -R +r {{ temp_dir }}/{{ sample.name }}_{{ sample.rglb }}_Solo.out

    # Move results to results directory
    mv {{ temp_dir }}/{{ sample.name }}_{{ sample.rglb }}_Log.final.out {{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_Log.final.out
    mv {{ temp_dir }}/{{ sample.name }}_{{ sample.rglb }}_Aligned.sortedByCoord.out.bam {{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_starSOLO.bam
    samtools index -@ 10 {{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_starSOLO.bam
    mv {{ temp_dir }}/{{ sample.name }}_{{ sample.rglb }}_Solo.out/* {{ results_dir }}

{% if cram|default(true) %}
{% set bam_path %}{{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_starSOLO.bam{% endset %}
{% set cram_path %}{{ results_dir }}/{{ sample.name }}_{{ sample.rglb }}_starSOLO.cram{% endset %}
{% set aligner = 'starSOLO' %}

- name: bam_to_cram_{{ sample.name }}_{{ sample.rglb }}_starSOLO
  tags: [{{ sample.gltype }}, {{ sample.name }}_{{ sample.rglb }}, bam_to_cram ]
  input: {{ bam_path }}
  output: {{ cram_path }}
  walltime: "8:00:00"
  cpus: 8
  mem: 3G
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.samtools_1_9.module }}

    samtools view \
      -C \
      -@ 8 \
      --reference "{{ constants.phoenix.star_fasta }}" \
      -o "{{ cram_path }}" \
      "{{ bam_path }}"

    samtools index "{{ cram_path }}"

{% endif %}


{% endmacro %}
