{% macro starsolo(files) %}
{% set libraries = files|groupby('rglb') %}

{% for library, datafiles in libraries %}
{% set props = datafiles[0] %}
{% set strandDirection = props.rnaStrandDirection %}
{% set assaycode = props.assayCode|default('unknown') %}
{% set fqCode = props.fastqCode %}

{% set samples_list = [] %}
{% set CDNA_LIST = [] %}
{% set CB_UMI_LIST = [] %}
{% for rgpu, _ in files|groupby('rgpu') %}
  {% set sample_string %}{{ props.name }}_{{ library }}_{{ rgpu[:-2] }}{% endset %}
  {% do samples_list.append(sample_string) %}
{% endfor %}

{% set star_index = constants.phoenix.starSOLO_index %}
{% set barcode_path = constants.phoenix.barcodes_path %}

{% set outdir %}{{ sample.gltype }}/quant/starSOLO/{{ sample.name }}/{% endset %}

- name: starsolo_count_{{ sample.name }}
  methods: >
    Alignment and quantification for {{ sample.name }} was performed with
    {{ constants.tools.star_2_7_1a.verbose }} using the genome index.
  input:
  {% for fq in datafiles %}
      - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  output: {{ outdir }}
  cpus: 20
  mem: 80
  walltime: "48:00:00"
  cmd: |
    set -uev
    module load {{ constants.tools.star_2_7_1a.module }}

    mkdir -p "{{ outdir }}"

    # Setting barcodes based on configuration
    # Cell Barcode Whitelist NOTES:
    # PATH = /packages/cellranger/3.0.2/cellranger-cs/3.0.2/lib/python/cellranger/barcodes
    # Single Cell 5' Gene Expression, transcript on R1 only = 737K-august-2016.txt
    # Single Cell 5' Gene Expression, transcript on R2 only = 737K-august-2016.txt
    # Single Cell 5' Gene Expression, paired-end = 737K-august-2016.txt
    # Single Cell V(D)J, transcript on R2 only = 737K-august-2016.txt
    # Single Cell V(D)J = 737K-august-2016.txt
    # CHEMISTRY_SC3P_V1 = 737K-april-2014_rc.txt
    # CHEMISTRY_SC3P_V2 = 737K-august-2016.txt
    # CHEMISTRY_SC3P_V3 = 3M-february-2018.txt.gz
    {% if assaycode == "XCSCR" %}
        {% set BARCODE %}{{ barcode_path }}/737K-august-2016.txt{% endset %}
    {% endif %}
    {% if assaycode == "X3SCR" %}
        {% set BARCODE %}{{ barcode_path }}/737K-april-2014_rc.txt{% endset %}
    {% endif %}
    {% if strandDirection == "Reverse" %}
        {% set BARCODE %}{{ barcode_path }}/737K-august-2016.txt{% endset %}
    {% endif %}

    # Make a comma separated list of the CDNA and CBUMI read sets
    {% if fqCode == "R1" %}
        {% set CBUMI_string %}{{ props.name }}_{{ library }}_{{ rgpu[:-2] }}{% endset %}
        {% do CB_UMI_LIST.append(CBUMI_string) %}
    {% endif %}
    {% if fqCode == "R2" %}
        {% set CDNA_string %}{{ props.name }}_{{ library }}_{{ rgpu[:-2] }}{% endset %}
        {% do CB_UMI_LIST.append(CDNA_string) %}
    {% endif %}

    # Setting to "Within" causes a segmentation fault, as does "Within KeepPairs"
    # cDNA read length-1 --> MUST MATCH THE VALUE USED FOR GENOME GENERATION used in pass-1
    # to add  \

    STAR \
      --runMode alignReads \
      --twopassMode Basic \
      --runThreadN 19 \
      --genomeLoad NoSharedMemory \
      --sjdbOverhang 99 \
      --readFilesType Fastx \
      --readFilesIn {{ CDNA_LIST }} {{ CB_UMI_LIST }} \
      --readFilesCommand zcat \
      --outFileNamePrefix {{ sample.name }}_ \
      --outSAMtype BAM SortedByCoordinate \
      --outSAMmode Full \
      --outSAMunmapped None \
      --outSAMmapqUnique 255 \
      --outSAMattributes NH HI AS nM CR CY UR UY \
      --soloType Droplet \
      --soloCBwhitelist {{ BARCODE }} \
      --soloFeatures Gene GeneFull \
      --soloUMIdedup 1MM_All \
      --soloCBstart 1 \
      --soloCBlen 16 \
      --soloUMIstart 17 \
      --soloUMIlen 10 \
      --soloBarcodeReadLength 0 \
      --genomeDir {{ star_index }} \
      --soloStrand {{ strandDirection }} \
      --soloOutFileNames Solo.out/ {{ sample.name }}_genes.tsv {{ sample.name }}_barcodes.tsv {{ sample.name }}_matrix.mtx {{ sample.name }}_matrixSJ.mtx

{% endmacro %}
