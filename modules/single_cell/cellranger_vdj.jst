{% from 'utilities/remove_files.jst' import remove_files with context %}
# Run 10X Cell Ranger VDJ assembly pipeline

{% macro cellranger_vdj(files) %}

{% set sample = files[0] %}
{% set outdir %}{{ sample.gltype }}/cellranger_vdj/{{ sample.name }}_{{ sample.rglb }}/{% endset %}
{% set temp_dir %}temp/{{ sample.gltype }}/cellranger_vdj/{{ sample.name }}_{{ sample.rglb }}/{% endset %}

{% set samples_list = [] %}
{% for rgpu, _ in files|groupby('rgpu') %}
  {% set sample_string %}{{ sample.name }}_{{ sample.rglb }}_{{ rgpu[:-2] }}{% endset %}
  {% do samples_list.append(sample_string) %}
{% endfor %}

- name: cellranger_vdj_{{ sample.name }}_{{ sample.rglb }}
  tags: [{{ sample.gltype }}, single_cell, cellranger_vdj, {{ sample.name }}]
  methods: >
    T-cell and B-cell VDJ assembly for {{ sample.name }} was performed with
    {{ constants.tools.cellranger.verbose }} using the included reference package.
  reset: predecessors
  input:
  {% for fq in files %}
   - temp/fastqs/{{ fq.basename }}
  {% endfor %}
  output:
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.bed
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.csv
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.json
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.bam
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.bam.bai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fasta
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fasta.fai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fastq
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_cell_barcodes.json
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_clonotypes.csv
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.bam
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.bam.bai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.fasta
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.fasta.fai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus_annotations.csv
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus_annotations.json
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus.bam
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus.bam.bai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fasta
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fasta.fai
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fastq
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig_annotations.csv
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig.fasta
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig.fastq
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_metrics_summary.csv
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}.vloupe
    - {{ outdir }}/{{ sample.name }}_{{ sample.rglb }}_web_summary.html
  cpus: 20
  mem: 80G
  walltime: "48:00:00"
  cmd: |
    set -eu
    set -o pipefail
    module load {{ constants.tools.cellranger.module }}

    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"
    mkdir -p "{{ outdir }}"

    {% for fq in files %}
    ln -rs "temp/fastqs/{{ fq.basename }}" "{{ temp_dir }}/{{ fq.basename }}"
    {% endfor %}

    {#
    # Cell Ranger recommended settings online are at least 8 cores and 6Gb of RAM per core
    # We are using 16 cores and therefore a 96Gb RAM pool is recommended
    #}
    ( cd {{ temp_dir }} && cellranger vdj \
        --localcores 20 \
        --localmem 80 \
        --id "{{ sample.name }}_{{ sample.rglb }}" \
        --fastqs . \
        --reference "{{ constants.phoenix.cellranger_vdj_reference }}" \
        --sample "{{ samples_list|join(',') }}" )

    # Renaming all output files, could be cleaned up a bit using 'rename' commands, might only remove one line or so
    {% set cellranger_out %}{{ temp_dir }}{{ sample.name }}_{{ sample.rglb }}/outs{% endset %}
    mv {{ cellranger_out }}/all_contig_annotations.bed {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.bed
    mv {{ cellranger_out }}/all_contig_annotations.csv {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.csv
    mv {{ cellranger_out }}/all_contig_annotations.json {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig_annotations.json
    mv {{ cellranger_out }}/all_contig.bam {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.bam
    mv {{ cellranger_out }}/all_contig.bam.bai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.bam.bai
    mv {{ cellranger_out }}/all_contig.fasta {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fasta
    mv {{ cellranger_out }}/all_contig.fasta.fai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fasta.fai
    mv {{ cellranger_out }}/all_contig.fastq {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_all_contig.fastq
    mv {{ cellranger_out }}/cell_barcodes.json {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_cell_barcodes.json
    mv {{ cellranger_out }}/clonotypes.csv {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_clonotypes.csv
    mv {{ cellranger_out }}/concat_ref.bam {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.bam
    mv {{ cellranger_out }}/concat_ref.bam.bai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.bam.bai
    mv {{ cellranger_out }}/concat_ref.fasta {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.fasta
    mv {{ cellranger_out }}/concat_ref.fasta.fai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_concat_ref.fasta.fai
    mv {{ cellranger_out }}/consensus_annotations.csv {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus_annotations.csv
    mv {{ cellranger_out }}/consensus_annotations.json {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus_annotations.json
    mv {{ cellranger_out }}/consensus.bam {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus.bam
    mv {{ cellranger_out }}/consensus.bam.bai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus.bam.bai
    mv {{ cellranger_out }}/consensus.fasta {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fasta
    mv {{ cellranger_out }}/consensus.fasta.fai {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fasta.fai
    mv {{ cellranger_out }}/consensus.fastq {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_consensus.fastq
    mv {{ cellranger_out }}/filtered_contig_annotations.csv {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig_annotations.csv
    mv {{ cellranger_out }}/filtered_contig.fasta {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig.fasta
    mv {{ cellranger_out }}/filtered_contig.fastq {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_filtered_contig.fastq
    mv {{ cellranger_out }}/metrics_summary.csv {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_metrics_summary.csv
    mv {{ cellranger_out }}/vloupe.vloupe {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}.vloupe
    mv {{ cellranger_out }}/web_summary.html {{ cellranger_out }}/{{ sample.name }}_{{ sample.rglb }}_web_summary.html

    {# move everything to the output directory #}
    mv {{ cellranger_out }}/* {{ outdir }}

{% endmacro %}
