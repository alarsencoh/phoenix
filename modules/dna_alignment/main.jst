# DNA Alignment with BWA MEM
# Take DNA fastq data files to aligned bams with qc data
{% from 'modules/dna_alignment/bwa_mem_samtools.jst' import bwa_mem_samtools, bwa_mem_samtools_chunked with context %}
{% from 'modules/dna_alignment/bwa_mem_gatk_picard.jst' import bwa_mem_gatk_picard, bwa_mem_gatk_picard_chunked with context %}
{% from 'modules/dna_alignment/gatk_baserecalibration.jst' import baserecalibration, nobaserecalibration with context %}
{% from 'modules/cram.jst' import make_cram with context %}
{% from 'modules/bam_qc.jst' import bam_qc with context %}


{% macro dna_alignment(samples) %}
  {% set alignment_style = dnaAlignmentStyle|default('tgen')|lower %}
  {% set chunking = chunking|default(True) %}
  {% set reads_per_chunk = reads_per_chunk|default(48000000) %}

  {% for sample in samples.values() if sample.glType|lower in ['genome', 'exome'] %}
    {% set needs_split = False %}
    {% for rg in sample.read_groups.values() %}
      {% if rg.numberOfReads|default(0) > reads_per_chunk %}
        {% set needs_split = True %}
      {% endif %}
    {% endfor %}
    {% if alignment_style == 'tgen' %}
      {% if chunking and needs_split %}
        {{- bwa_mem_samtools_chunked(sample, reads_per_chunk) }}
      {% else %}
        {{- bwa_mem_samtools(sample) }}
      {% endif %}
    {% elif alignment_style == 'broad'  %}
      {% if chunking and needs_split %}
        {{- bwa_mem_gatk_picard_chunked(sample, reads_per_chunk) }}
      {% else %}
        {{- bwa_mem_gatk_picard(sample) }}
      {% endif %}
    {% elif alignment_style == 'ashion' %}
      {{ raise('Not implemented yet..') }}
    {% else %}
      {{ raise('Unknown dnaAlignmentStyle: {}'.format(dnaAlignmentStyle)) }}
    {% endif %}

    {% if sample.glType|lower == 'genome' %}
      {% if tasks.Genome_base_recalibration_gatk_4_0_1_2 is defined and tasks.Genome_base_recalibration_gatk_4_0_1_2 %}
        {{- baserecalibration(sample, aligner='bwa') }}
      {% else %}
         {{- nobaserecalibration(sample, aligner='bwa') }}
      {% endif %}
    {% elif sample.glType|lower == 'exome' %}
      {% if tasks.Exome_base_recalibration_gatk_4_0_1_2 is defined and tasks.Exome_base_recalibration_gatk_4_0_1_2 %}
          {{- baserecalibration(sample, aligner='bwa') }}
      {% else %}
          {{- nobaserecalibration(sample, aligner='bwa') }}
      {% endif %}
    {% endif %}

    {{- make_cram(sample, aligner='bwa') }}
    {{- bam_qc(sample, aligner='bwa') }}
  {% endfor %}

{% endmacro %}
