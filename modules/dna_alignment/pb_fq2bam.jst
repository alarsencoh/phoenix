# Aligns fastqs from a sample using Parabricks fq2BAM. This aligns all samples
# in on large run. No need to split or merge. It will also run
# mark duplicatese and BQSR if needed

# This alignment command prefix is shared by all modules using bwa
{% from 'utilities/read_group_line.jst' import read_group_line with context %}
{% from 'utilities/remove_files.jst' import remove_files with context %}

{% macro fq2bam(sample, opt_dup_distance) %}
  {% set bam %}{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/{{ sample.name }}.bwa.bam{% endset %}

- name: fq2bam_{{sample.name}}
  tags: [{{ sample.gltype }}, alignment, dna_alignment, bwa, {{ sample.name }}]
  reset: predecessors
  input:
  {% for rgid, rg in sample.read_groups.items() %}
    {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
    {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
    - temp/fastqs/{{ r1fastq.basename }}
    - temp/fastqs/{{ r2fastq.basename }}
  {% endfor %}
  output: temp/{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/{{ sample.name }}.bwa.bam
  walltime: "24:00:00"
  sbatch_args: ['-p', 'gpu', '--exclusive']
  cmd: |
    set -eu
    set -o pipefail

    rm -r "temp/{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/markdup_temp/" || true
    mkdir -p "temp/{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/markdup_temp/"
    mkdir -p "{{ sample.gltype }}/alignment/bwa/{{ sample.name }}"
    mkdir -p "{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/stats/"

    module load {{ constants.tools.parabricks.module }}

    pbrun fq2bam \
    --tmp-dir "temp/{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/markdup_temp/" \
    --ref "{{ constants.phoenix.bwa_index }}" \
    --bwa-options "-Y -K 100000000" \
    {% for rgid, rg in sample.read_groups.items() %}
      {% set r1fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R1')|first %}
      {% set r2fastq = rg.data_files|selectattr('fastqCode', 'eq', 'R2')|first %}
      --in-fq "temp/fastqs/{{ r1fastq.basename }}" "temp/fastqs/{{ r2fastq.basename }}" "{{ read_group_line(rg, format='bwa') }}" \
    {% endfor %}
    --out-duplicate-metrics "{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/stats/{{ sample.name }}.mdmetrics.txt" \
    --optical-duplicate-pixel-distance {{ opt_dup_distance }} \
    --out-bam "{{ sample.gltype }}/alignment/bwa/{{ sample.name }}/{{ sample.name }}.bwa.bam"

{% endmacro %}
